{"version":3,"sources":["graphql/fragments.js","graphql/queries/local.js","graphql/queries/remote.js","graphql/resolvers.js","graphql/client.js","components/linear-progress/LinearProgress.js","components/alert/Alert.js","components/card/Card.js","components/card/CardHeader.js","components/card/CardBody.js","components/card/CardAction.js","components/card/CardImage.js","components/modal/Modal.js","components/container/Container.js","components/avatar/Avatar.js","components/divider/Divider.js","graphql/mutations/remote.js","components/buttons/Flat.js","components/grid/GridRow.js","components/grid/GridItem.js","graphql/mutations/local.js","components/material-fields/InputField.js","components/comment/AddComment.js","components/collections/Collection.js","components/collections/CollectionItem.js","components/comment/ShowComment.js","graphql/subscriptions.js","components/comment/Comments.js","components/photo-likers/PhotoLikers.js","components/icons/Material.js","components/photos/components/Photo.js","components/photos/Photos.js","views/timeline/components/SelectPicture.js","views/timeline/components/SharePicture.js","views/timeline/Timeline.js","views/profile/components/ProfilePicture.js","views/profile/components/AddProfile.js","views/profile/components/ChangeProfilePicture.js","views/profile/components/EditProfile.js","views/profile/components/AboutUser.js","views/profile/Profile.js","components/login/credentials/Credentials.js","components/login/useProviderSignin.js","components/login/facebook/Facebook.js","components/login/google/Google.js","components/login/github/Github.js","components/register/Register.js","components/login/Login.js","views/authentication/Authentication.js","views/user-profile/UserProfile.js","views/searched-photos/SearchedPhotoList.js","layout/Navbar.js","layout/Footer.js","layout/GeneralLayout.js","views/notifications/components/Notification.js","views/notifications/NotificationList.js","App.js","serviceWorker.js","index.js"],"names":["TIMELINE_USER","gql","PHOTO_COMMENT","REPLY_DATA","REPLY_DATA_FOR_SUB","TIMELINE_PHOTO","PAGE_INFO","GET_AUTH_USER","GET_SIGNING_IN_OR_UP","GET_GITHUB_CODE","GET_PHOTO_NOTIFICATIONS","GET_ME_PROFILE","TIMELINE_DATA","USER_SHARED_PHOTOS","COMMENTS_ON_PHOTO","PHOTO_LIKERS","SEARCH_PHOTOS","resolvers","Mutation","setAuthUser","_","user","cache","authUser","readQuery","query","writeData","data","setSigningInOrUp","state","signingInOrUp","setGithubCode","value","githubCode","setNotification","variables","notifications","notification","updateTotalCommentCount","id","getCacheKey","__typename","fragment","photo","readFragment","totalComment","updateTotalLikes","photoId","action","likes","likerId","filter","addPhotoToLocalStore","userId","photos","me","edgeElem","node","edges","writeQuery","sharedPhotos","e","updateSharedPhotos","removePhotoFromLocalStore","picture","updateMeProfile","profile","console","log","Query","getMeProfile","__","errorLink","onError","graphQLErrors","networkError","forEach","message","locations","path","authLink","ApolloLink","operation","forward","setContext","headers","authorization","localStorage","getItem","JSON","parse","token","httpLink","createUploadLink","uri","wsLink","WebSocketLink","options","reconnect","httpOrWs","split","definition","getMainDefinition","kind","link","from","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","InMemoryCache","initialData","client","ApolloClient","connectToDevTools","onResetStore","props","className","color","outDuration","M","toast","html","classes","Card","children","rest","clsx","CardHeader","CardBody","CardAction","CardImage","src","text","alt","Modal","title","Container","Avatar","ADD_COMMENT","LIKE_PHOTO","UNLIKE_PHOTO","REPLY_COMMENT","SIGN_IN_WITH_CREDENTIALS","SIGN_UP_USING_FORM","ADD_A_PHOTO","ADD_USER_PROFILE","EDIT_USER_PROFILE","EDIT_USER_PROFILE_PICTURE","SIGN_IN_WITH_PROVIDER","Flat","style","textTransform","GridRow","sm","md","lg","smOffset","mdOffset","lgOffset","s","m","l","sOffset","mOffset","lOffset","GridItem","SET_SIGNING_IN_OR_UP","SET_GITHUB_CODE","UPDATE_TOTAL_COMMENT_COUNT","UPDATE_TOTAL_LIKES","ADD_PHOTO_TO_LOCAL_STORE","REMOVE_PHOTO_FROM_LOCAL_STORE","SET_PHOTO_NOTIFICATIONS","UPDATE_ME_PROFILE","InputField","React","forwardRef","ref","labelClassName","styleLabel","label","htmlFor","defaultProps","AddComment","useQuery","useMutation","updateTotalComment","meProfileData","update","createComment","commentsByPhotoId","addComment","loading","useState","comment","setComment","handleSend","keyCode","type","newComment","commentor","content","catch","Alert","onChange","target","name","placeholder","onKeyUp","disabled","onClick","Collection","CollectionItem","AvatarComment","visitProfile","username","Replies","borderRadius","border","replies","map","reply","key","replier","moment","createdAt","fromNow","history","useHistory","createReply","replyOpen","setReplyOpen","showReplies","setShowReplies","setReply","push","marginTop","marginBottom","length","paddingRight","paddingLeft","commentId","newComments","commentItem","autoFocus","COMMENT_ADDED","PHOTOLIKEDORUNLIKED","PHOTO_ADDED","Comments","useApolloClient","useSubscription","onSubscriptionData","commentAdded","subscriptionData","pagedData","setPagedData","currentPage","setCurrentPage","comments","setComments","totalPages","setTotalPages","useEffect","then","res","Math","ceil","start","end","slice","observable","watchQuery","subscribe","unsubscribe","values","next","list","reduce","previous","current","accumulator","indexOf","i","styles","display","alignItems","cursor","User","closeModal","ids","photoLikers","setLikers","liker","backgroundColor","Material","likePhoto","unlikePhoto","unliking","setPhoto","commentRef","useRef","btnRef","modal","identifier","photoLikedOrUnliked","updatePhotoStatus","photoItem","observable1","observable2","userIdForSharedPhotos","openModal","elems","document","querySelectorAll","instances","init","open","owner","description","photoUrl","paddingTop","paddingBottom","classList","contains","unlikePhotoData","likePhotoData","likeList","findIndex","hasUserLiked","fontSize","focus","PhotoLikers","close","Photos","loadMorePhotos","hasNextPage","dataLength","hasMore","loader","LinearProgress","addPhoto","notifyUsers","file","setFile","setDescription","category","setCategory","photoAdded","handleFileInput","files","validateForm","errors","onInput","background","Object","keys","errorMsgs","join","photoData","taggedUsers","createPhoto","SelectPicture","error","fetchMore","photoList","setPhotoList","pageInfo","after","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","ProfilePicture","updateProfile","addUserProfile","profileData","about","createProfile","profileId","showChangeProfilePic","editUserProfilePicture","editProfilePicture","showEditProfile","editUserProfile","editProfile","AboutUser","setShowEditProfile","setShowChangeProfilePic","EditProfile","ChangeProfilePicture","AddProfile","signUp","formSignIn","setLoading","emailOrUsername","setEmailOrUsername","password","setPassword","email","signinData","trim","setItem","stringify","setTimeout","useProviderSignin","signIn","codeToken","providerName","providerSignIn","signInWithProvider","fontFamily","appId","callback","response","accessToken","render","renderProps","isDisabled","clientId","onSuccess","tokenId","cookiePolicy","window","location","setEmail","setUsername","confirmPass","setConfirmPass","formSignUp","test","fontWeight","signupData","loginContainer","height","margin","SignIn","Github","Google","Facebook","Credentials","showSignUp","setShowSignUp","Login","UserProfile","useLocation","SearchedPhotoList","searchText","searchPhotos","timelinePhotos","removeItem","resetStore","replace","logout","to","Footer","href","Date","getFullYear","Navbar","Notification","handleNotificationClicked","NotificationList","handleNotificationClick","notificationItems","App","exact","GeneralLayout","Timeline","Authentication","search","match","code","mutate","mutation","setCode","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"62DAEO,IAAMA,EAAgBC,IAAH,KAWbC,EAAgBD,IAAH,IAWvBD,GAEUG,EAAaF,IAAH,IASpBD,GAEUI,EAAqBH,IAAH,IAU5BD,GAEUK,EAAiBJ,IAAH,IAgBxBD,GAGUM,EAAYL,IAAH,K,29BChEf,IAAMM,EAAgBN,IAAH,KAQbO,EAAuBP,IAAH,KAKpBQ,EAAkBR,IAAH,KAiBfS,GAXcT,IAAH,IAQrBC,GAGoCD,IAAH,IAMjCI,IAGUM,EAAiBV,IAAH,K,mkFCvCpB,IAAMW,EAAgBX,IAAH,IAkBvBI,EACAL,EACAM,GAGUO,EAAqBZ,IAAH,IAyB5BI,EACAL,EACAM,GAWUQ,IARYb,IAAH,IAMnBD,GAE8BC,IAAH,IAS3BC,EACAC,IAEUY,GAAed,IAAH,IAMtBD,GAsBUgB,IAnBef,IAAH,IAetBD,EACAM,GAG0BL,IAAH,IAgBvBI,EACAC,I,ygBCtHI,IAAMW,GAAY,CACxBC,SAAU,CACTC,YAAa,SAACC,EAAD,KAA6B,IAAvBC,EAAsB,EAAtBA,KAAUC,EAAY,EAAZA,MACpBC,EAAaD,EAAME,UAAU,CAAEC,MAAOlB,IAAtCgB,SAIR,OAHAD,EAAMI,UAAU,CACfC,KAAM,CAAEJ,SAAS,eAAMA,EAAP,GAAoBF,MAE9B,MAERO,iBAAkB,SAACR,EAAD,KAA8B,IAAxBS,EAAuB,EAAvBA,MAIvB,OAJ8C,EAAZP,MAC5BI,UAAU,CACfC,KAAM,CAAEG,cAAeD,KAEjB,MAERE,cAAe,SAACX,EAAD,KAA8B,IAAxBY,EAAuB,EAAvBA,MAIpB,OAJ2C,EAAZV,MACzBI,UAAU,CACfC,KAAM,CAAEM,WAAYD,KAEd,MAERE,gBAAiB,SAACd,EAAGe,EAAJ,GAA8B,IAAbb,EAAY,EAAZA,MACzBc,EAAkBd,EAAME,UAAU,CAAEC,MAAOf,IAA3C0B,cAMR,OAJAd,EAAMI,UAAU,CACfC,KAAM,CAAES,cAAc,GAAD,mBAAMA,GAAN,CAAqBD,EAAUE,kBAG9CF,EAAUE,cAElBC,wBAAyB,SAAClB,EAAGe,EAAJ,GAA2C,IAA1Bb,EAAyB,EAAzBA,MACnCiB,GAAKC,EADuD,EAAlBA,aACzB,CAAEC,WAAY,QAASF,GAAIJ,EAAUI,KACtDG,EAAWzC,IAAH,MAKR0C,EAAQrB,EAAMsB,aAAa,CAAEF,WAAUH,OACvCZ,EAAI,eAAQgB,EAAR,CAAeE,aAAcF,EAAME,aAAe,IAE5D,OADAvB,EAAMI,UAAU,CAAEa,KAAIZ,SACf,MAERmB,iBAAkB,SAAC1B,EAAGe,EAAJ,GAA2C,IAQxDR,EAR8BL,EAAyB,EAAzBA,MAC5BiB,GAAKC,EADgD,EAAlBA,aAClB,CAAEC,WAAY,QAASF,GAAIJ,EAAUY,UACtDL,EAAWzC,IAAH,MAKR0C,EAAQrB,EAAMsB,aAAa,CAAEF,WAAUH,OAEpB,SAArBJ,EAAUa,SACbrB,EAAI,eAAQgB,EAAR,CAAeM,MAAM,GAAD,mBAAMN,EAAMM,OAAZ,CAAmBd,EAAUe,aAE7B,WAArBf,EAAUa,SACbrB,EAAI,eAAQgB,EAAR,CAAeM,MAAON,EAAMM,MAAME,QAAO,SAACZ,GAAD,OAAQA,IAAOJ,EAAUe,cAEvE5B,EAAMI,UAAU,CAAEa,KAAIZ,UAGvByB,qBA3DS,SA2DYhC,EA3DZ,KA2D8C,IAA7BuB,EAA4B,EAA5BA,MAAOU,EAAqB,EAArBA,OAAY/B,EAAS,EAATA,MAAS,EAC9BA,EAAME,UAAU,CAAEC,MAAOb,IAAxC0C,EAD6C,EAC7CA,OAAQC,EADqC,EACrCA,GAEVC,EAAW,CAChBC,KAAK,eACDd,GAEJF,WAAY,QAEba,EAAOI,MAAP,CAAgBF,GAAhB,mBAA6BF,EAAOI,QAEpCpC,EAAMqC,WAAW,CAChBlC,MAAOb,EACPe,KAAM,CAAE2B,SAAQC,QAGbF,GAuCP,YAAuD,IAAzB/B,EAAwB,EAAxBA,MAAOqB,EAAiB,EAAjBA,MAAOU,EAAU,EAAVA,OAC3C,IAAK,IAAD,EACkB/B,EAAME,UAAU,CAAEC,MAAOZ,EAAoBsB,UAAW,CAAEI,GAAIc,KAA3EhC,EADL,EACKA,KAAMkC,EADX,EACWA,GACRC,EAAW,CAChBC,KAAK,eACDd,GAEJF,WAAY,QAEbpB,EAAKuC,aAAaF,MAAlB,CAA2BF,GAA3B,mBAAwCnC,EAAKuC,aAAaF,QAC1DpC,EAAMqC,WAAW,CAChBlC,MAAOZ,EACPsB,UAAW,CAAEI,GAAIc,GACjB1B,KAAM,CAAEN,OAAMkC,QAEd,MAAOM,KArDNC,CAAmB,CAAExC,QAAOqB,QAAOU,YAGrCU,0BA/ES,SA+EiB3C,EA/EjB,KA+E2C,IAArBuB,EAAoB,EAApBA,MAAWrB,EAAS,EAATA,MACjCc,EAAkBd,EAAME,UAAU,CAAEC,MAAOf,IAA3C0B,cAERd,EAAMqC,WAAW,CAChBlC,MAAOf,EACPiB,KAAM,CAAES,cAAeA,EAAce,QAAO,SAACa,GAAD,OAAaA,EAAQzB,KAAOI,EAAMJ,UAGhF0B,gBAvFS,SAuFO7C,EAvFP,KAuFwD,IAA5CiC,EAA2C,EAA3CA,OAAQa,EAAmC,EAAnCA,QAAa5C,EAAsB,EAAtBA,MACnCiB,GAAKC,EADoD,EAAfA,aACzB,CAAEC,WAAY,OAAQF,GAAIc,IAC3CX,EAAWzC,IAAH,MAQRoB,EAAOC,EAAMsB,aAAa,CAAEF,WAAUH,OAC5C4B,QAAQC,IAAI,kBAAmB/C,GAE/B,IAAMM,EAAI,eAAQN,EAAR,CAAc6C,QAAQ,eAAMA,KAGtC,OAFAC,QAAQC,IAAI,gCAAiCzC,GAC7CL,EAAMI,UAAU,CAAEa,KAAIZ,SACf,OAGT0C,MAAO,CACNC,aADM,SACOlD,EAAGmD,EADV,GAGL,OAF8B,EAATjD,MACAE,UAAU,CAAEC,MAAOb,IAAhC2C,MCpGX,IAAMiB,GAAYC,aAAQ,YAAsC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACvCD,GACHA,EAAcE,SAAQ,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAvB,OACrBZ,QAAQC,IAAR,oCAAyCS,EAAzC,uBAA+DC,EAA/D,mBAAmFC,OAEjFJ,GAAcR,QAAQC,IAAR,2BAAgCO,OAG7CK,GAAW,IAAIC,KAAW,SAACC,EAAWC,GAW3C,OAVAD,EAAUE,YAAW,YAAkB,IAAfC,EAAc,EAAdA,QACvB,MAAO,CACNA,QAAQ,eACJA,EADG,CAENC,cAAeC,aAAaC,QAAQ,aAArB,gBACHC,KAAKC,MAAMH,aAAaC,QAAQ,cAAcG,OACvD,SAICR,EAAQD,MAGVU,GAAWC,2BAAiB,CAEjCC,IAAK,wDAEAC,GAAS,IAAIC,IAAc,CAChCF,IAAK,mDAELG,QAAS,CAAEC,WAAW,KAGjBC,GAAWC,aAChB,YAAgB,IAAb3E,EAAY,EAAZA,MACI4E,EAAaC,YAAkB7E,GACrC,MAA2B,wBAApB4E,EAAWE,MAA2D,iBAAzBF,EAAWnB,YAEhEa,GACAH,IAGKY,GAAOvB,IAAWwB,KAAK,CAACzB,GAAUR,GAAW2B,KAE7CO,GAAkB,IAAIC,IAA6B,CAAEC,iCAErDtF,GAAQ,IAAIuF,IAAc,CAAEH,qBAE5BI,GAAc,CACnBvF,SAAU,CACToE,MAAOJ,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAcG,MAAQ,GACjGtC,OAAQkC,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAcnC,OAAS,GACnGZ,WAAY,gBAEbX,eAAe,EACfM,cAAe,GACfH,WAAY,IAGbX,GAAMI,UAAU,CACfC,KAAMmF,KAGP,IAAMC,GAAS,IAAIC,IAAa,CAC/B1F,SACAkF,QACAS,mBAAmB,EACnBhG,eAED8F,GAAOG,cAAa,WACnB5F,GAAMI,UAAU,CACfC,KAAMmF,Q,MAGD,I,sDCpFQ,YAACK,GACf,OACC,uCAAKC,UAAU,iBAAoBD,GAClC,yBAAKC,UAAU,mCCLH,eAAsC,IAAnCvC,EAAkC,EAAlCA,QAASwC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAEjCC,EAAEC,MAAM,CAAEC,KAAM5C,EAAS6C,QAASL,EAAOC,YAAaA,GAA4B,O,iBCgBpEK,GAdF,SAAAR,GAAU,IACdS,EAAiCT,EAAjCS,SAAUR,EAAuBD,EAAvBC,UAAcS,EADX,aACoBV,EADpB,0BAGrB,OACC,uCAAKC,UAAWU,aAAK,CAAC,OAAQV,KAAiBS,GAC7CD,ICSWG,GAdI,SAAAZ,GAAU,IACpBS,EAAiCT,EAAjCS,SAAUR,EAAuBD,EAAvBC,UAAcS,EADL,aACcV,EADd,0BAG3B,OACC,uCAAKC,UAAWU,aAAK,CAAC,aAAcV,KAAiBS,GACnDD,ICSWI,GAdE,SAAAb,GAAU,IAClBS,EAAiCT,EAAjCS,SAAUR,EAAuBD,EAAvBC,UAAcS,EADP,aACgBV,EADhB,0BAGzB,OACC,uCAAKC,UAAWU,aAAK,CAAC,eAAgBV,KAAiBS,GACrDD,ICSWK,GAdI,SAAAd,GAAU,IACpBS,EAAiCT,EAAjCS,SAAUR,EAAuBD,EAAvBC,UAAcS,EADL,aACcV,EADd,0BAG3B,OACC,uCAAKC,UAAWU,aAAK,CAAC,cAAeV,KAAiBS,GACpDD,ICYWM,GAjBG,SAAAf,GAAU,IACnBC,EAA4CD,EAA5CC,UAAWe,EAAiChB,EAAjCgB,IAAKP,EAA4BT,EAA5BS,SAAUQ,EAAkBjB,EAAlBiB,KAASP,EADjB,aAC0BV,EAD1B,uCAG1B,OACC,uCAAKC,UAAWU,aAAK,CAAC,aAAcV,KAAiBS,GACpD,yBAAKM,IAAKA,EAAKE,IAAKD,IACnBR,ICWWU,GAfD,SAAC,GAAwC,IAAtCV,EAAqC,EAArCA,SAAUrF,EAA2B,EAA3BA,GAAIgG,EAAuB,EAAvBA,MAAOnB,EAAgB,EAAhBA,UACrC,OACC,6BACC,yBAAK7E,GAAIA,EAAI6E,UAAWU,aAAK,CAAC,QAASV,KACtC,yBAAKA,UAAU,iBACd,wBAAIA,UAAU,yBAAyB7E,GAAG,eACxCgG,GAEDX,MCJSY,GAPG,SAAC,GAA2B,IAAzBZ,EAAwB,EAAxBA,SAAwB,6BAC5C,OAAO,yBAAKR,UAAU,aAAaQ,ICQrBa,I,MARA,SAAC,GAAa,IAAXN,EAAU,EAAVA,IACjB,OAAO,yBAAKA,IAAKA,EAAKE,IAAI,GAAGjB,UAAU,oBCHzB,I,MAAA,WACd,OAAO,0BAAMA,UAAU,c,u2ECCjB,IAAMsB,GAAczI,IAAH,KASrBC,EACAC,GAGUwI,GAAa1I,IAAH,MAOV2I,GAAe3I,IAAH,MAOZ4I,GAAgB5I,IAAH,KAMvBE,GAGU2I,GAA2B7I,IAAH,MASxB8I,GAAqB9I,IAAH,MAQlB+I,GAAc/I,IAAH,KAMrBI,GAGU4I,GAAmBhJ,IAAH,MAUhBiJ,GAAoBjJ,IAAH,MAQjBkJ,GAA4BlJ,IAAH,MASzBmJ,GAAwBnJ,IAAH,MCtEnBoJ,GAnBF,SAAAlC,GAAU,IACdS,EAAiCT,EAAjCS,SAAUR,EAAuBD,EAAvBC,UAAcS,EADX,aACoBV,EADpB,0BAGrB,OACC,0CACCmC,MAAO,CAAEC,cAAe,cACxBnC,UAAWU,aAAK,CAAC,oDAAqDV,KAClES,GAEHD,ICGW4B,I,MAZC,SAAC,GAAsC,IAApC5B,EAAmC,EAAnCA,SAAUR,EAAyB,EAAzBA,UAAcS,EAAW,yCACrD,OACC,uCAAKT,UAAWU,aAAK,CAAC,MAAOV,KAAiBS,GAC5CD,K,SCHEF,GAAU,SAAC,GAA6D,IAA3D+B,EAA0D,EAA1DA,GAAIC,EAAsD,EAAtDA,GAAIC,EAAkD,EAAlDA,GAAIC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAAU1C,EAAgB,EAAhBA,UACtD2C,EAAC,WAAON,GACRO,EAAC,WAAON,GACRO,EAAC,WAAON,GACRO,EAAO,kBAAcN,GACrBO,EAAO,kBAAcN,GACrBO,EAAO,kBAAcN,GAC3B,OAAOhC,aAAK,CACX,MADW,gBAERiC,EAAIN,GAFI,gBAGRO,EAAIN,GAHI,gBAIRO,EAAIN,GAJI,gBAKRO,EAAUN,GALF,gBAMRO,EAAUN,GANF,gBAORO,EAAUN,GACb1C,KAmBaiD,GAhBE,SAAAlD,GAAU,IAClBS,EAAsBT,EAAtBS,SAAaC,EADI,aACKV,EADL,cAEzB,OAAO,yBAAKC,UAAWM,GAAQG,IAAQD,I,2qDCtBX3H,IAAH,MAAnB,IAKMqK,GAAuBrK,IAAH,MAKpBsK,GAAkBtK,IAAH,MAMfuK,GAA6BvK,IAAH,MAM1BwK,GAAqBxK,IAAH,MAKlByK,GAA2BzK,IAAH,MAKxB0K,GAAgC1K,IAAH,MAM7B2K,GAA0B3K,IAAH,MAKvB4K,GAAoB5K,IAAH,MCzCxB6K,I,MAAaC,IAAMC,YAAW,WAAqDC,GAAS,IAA3D1I,EAA0D,EAA1DA,GAAI2I,EAAsD,EAAtDA,eAAgBC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,MAAUvD,EAAgB,6DAChG,OACC,yBAAKT,UAAWU,aAAK,CAAC,cAAe,CAAE,cAAeqD,MACrD,2CAAWtD,EAAX,CAAiBtF,GAAIA,EAAI0I,IAAKA,KAC7B1I,GAAM6I,GACN,2BAAOhE,UAAW8D,EAAgBG,QAAS9I,GACzC6I,QAONN,GAAWQ,aAAe,CACzBJ,eAAgB,UASFJ,UCiEAS,GA3EIR,IAAMC,YAAW,WAAcC,GAAS,IAApBlI,EAAmB,EAAnBA,QAE7BxB,EACLiK,aAASjL,GADZoB,KAAQJ,SAFgD,EAK5BkK,aAAYjB,IAAlCkB,EALkD,qBAO3CC,EAAkBH,aAAS7K,EAAgB,CAAEwB,UAAW,CAAEkB,OAAQ9B,EAAS8B,UAAjF1B,KAPiD,EAUvB8J,aAAY/C,GAAa,CAC1DkD,OAD0D,SACnDtK,EADmD,GACd,IAApBuK,EAAmB,EAA3BlK,KAAQkK,cACfC,EAAsBxK,EAAME,UAAU,CAAEC,MAAOX,GAAmBqB,UAAW,CAAEY,aAA/E+I,kBACRxK,EAAMqC,WAAW,CAChBlC,MAAOX,GACPqB,UAAW,CAAEY,WACbpB,KAAM,CAAEmK,kBAAkB,GAAD,mBAAMA,GAAN,CAAyBD,OAEnDH,EAAmB,CAAEvJ,UAAW,CAAEI,GAAIQ,QAlBiB,oBAUlDgJ,EAVkD,KAUpCC,EAVoC,KAUpCA,QAVoC,EAsB3BjB,IAAMkB,SAAS,IAtBY,oBAsBlDC,EAtBkD,KAsBzCC,EAtByC,KAwBnDC,EAAa,SAACvI,GACnB,GAAKqI,IAEa,KAAdrI,EAAEwI,SAA6B,UAAXxI,EAAEyI,MAA1B,CACC,IAAMC,EAAa,CAClBxJ,UACAyJ,UAAWjL,EAAS8B,OACpBoJ,QAASP,GAEVH,EAAW,CAAE5J,UAAW,CAAE+J,QAAQ,eAAMK,MAAkBG,OAAM,SAAC7I,GAChE8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,WAEpC8E,EAAW,MAIb,OACC,oCACC,yBAAK/E,UAAU,6BACd,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAUqC,GAAI,EAAGC,GAAI,GACpB,kBAAC,GAAD,CACCvB,IACCwD,GAAiBA,EAAcrH,aAAaJ,QACzCyH,EAAcrH,aAAaJ,QAAQF,QACnC,oBAIN,kBAAC,GAAD,CAAUyF,GAAI,GAAIC,GAAI,IACrB,kBAAC,GAAD,CACC1H,MAAOgK,EAAU,aAAeE,EAChCU,SAAU,SAAC/I,GAAD,OAAOsI,EAAWtI,EAAEgJ,OAAO7K,QACrC8K,KAAK,UACL5B,eAAe,WACf6B,YAAY,kBACZ9B,IAAKA,EACL+B,QAASZ,EACThF,UAAU,0BAIb,yBAAKA,UAAU,eACd,kBAAC,GAAD,CAAM6F,SAAUjB,EAAS5E,UAAU,WAAW8F,QAASd,GAAvD,c,oBCpEUe,I,MAZI,SAAC,GAAsC,IAApCvF,EAAmC,EAAnCA,SAAUR,EAAyB,EAAzBA,UAAcS,EAAW,yCACxD,OACC,sCAAIT,UAAWU,aAAK,CAAC,aAAcV,KAAiBS,GAClDD,KCSWwF,GAZQ,SAAC,GAAsC,IAApCxF,EAAmC,EAAnCA,SAAUR,EAAyB,EAAzBA,UAAcS,EAAW,yCAC5D,OACC,sCAAIT,UAAWU,aAAK,CAAC,kBAAmBV,KAAiBS,GACvDD,ICUEyF,GAAgB,SAAC,GAAqC,IAAnChM,EAAkC,EAAlCA,KAAM6K,EAA4B,EAA5BA,QAASoB,EAAmB,EAAnBA,aACvC,OACC,yBAAKlG,UAAU,6CACd,kBAAC,GAAD,CAAQe,IAAK9G,EAAK6C,QAAU7C,EAAK6C,QAAQF,QAAU,mBACnD,2BACC,0BAAMkJ,QAASI,EAAclG,UAAU,aACrC/F,EAAKkM,UAENrB,EAAQO,WAKPe,GAAU,SAAC,GAA+B,IAA7BtB,EAA4B,EAA5BA,QAASoB,EAAmB,EAAnBA,aAC3B,OACC,kBAAC,GAAD,CAAYhE,MAAO,CAAEmE,aAAc,GAAIC,OAAQ,sBAC9C,kBAAC,GAAD,CAAgBtG,UAAU,cAA1B,sBACC8E,EAAQyB,QAAQC,KAAI,SAACC,GAAD,OACpB,kBAAC,GAAD,CAAgBC,IAAKD,EAAMtL,IAC1B,kBAAC,GAAD,CACClB,KAAMwM,EAAME,QACZ7B,QAAS2B,EACTP,aAAc,kBAAMA,EAAaO,EAAME,QAAQxL,OAEhD,8BAAOyL,MAAQH,EAAMI,WAAWC,iBAOtB,eAA2B,IAAxBhC,EAAuB,EAAvBA,QAASnJ,EAAc,EAAdA,QACpBoL,EAAUC,eADwB,EAGL3C,aAAY5C,IAHP,oBAGjCwF,EAHiC,KAGlBrC,EAHkB,KAGlBA,QAHkB,EAKNC,oBAAS,GALH,oBAKjCqC,EALiC,KAKtBC,EALsB,OAMFtC,oBAAS,GANP,oBAMjCuC,EANiC,KAMpBC,EANoB,OAOdxC,mBAAS,IAPK,oBAOjC4B,EAPiC,KAO1Ba,EAP0B,KAS/BnN,EACLiK,aAASjL,GADZoB,KAAQJ,SAGH+L,EAAe,SAAC/K,GACrB,GAAIhB,EAAS8B,SAAWd,EACvB,OAAO4L,EAAQQ,KAAK,YAErBR,EAAQQ,KAAK,YAAcpM,EAAI,CAAEA,QAmDlC,OACC,6BACC,kBAAC,GAAD,CACClB,KAAM6K,EAAQM,UACdN,QAASA,EACToB,aAAc,kBAAMA,EAAapB,EAAQM,UAAUjK,OAEpD,yBAAK6E,UAAU,cAAckC,MAAO,CAAEsF,UAAW,EAAGC,aAAc,KACjE,8BAAOb,MAAQ9B,EAAQ+B,WAAWC,WACjChC,EAAQyB,QAAQmB,OAAS,GACzB,0BAAM1H,UAAU,kBAAkB8F,QAAS,kBAAMuB,GAAe,SAAC5M,GAAD,OAAYA,OAC3E,0BAAMyH,MAAO,CAAEyF,aAAc,IAAM7C,EAAQyB,QAAQmB,QAClDN,EAAc,OAAS,WAG1B,kBAAC,GAAD,CAAMpH,UAAU,aAAa8F,QA/DP,WACxBqB,GAAa,SAAC1M,GAAD,OAAYA,OA+DrByM,EAAY,OAAS,SAGtBE,GAAe,kBAAC,GAAD,CAAStC,QAASA,EAASoB,aAAcA,IAExDgB,GACA,yBAAKhF,MAAO,CAAE0F,YAAa,KAC1B,kBAAC,GAAD,CACChC,QArEkB,SAACnJ,GACN,KAAdA,EAAEwI,SACDwB,IACLQ,EAAY,CACXlM,UAAW,CACV0L,MAAO,CACNE,QAASxM,EAAS8B,OAClB4L,UAAW/C,EAAQ3J,GACnBkK,QAASoB,IAGXjC,OARW,SAQJtK,EARI,GAQ+B,IAAlB+M,EAAiB,EAAzB1M,KAAQ0M,YAOjBa,EANwB5N,EAAME,UAAU,CAC7CC,MAAOX,GACPqB,UAAW,CACVY,aAHM+I,kBAM8B8B,KAAI,SAACuB,GAC1C,OAAIA,EAAY5M,KAAO2J,EAAQ3J,GACvB,eACH4M,EADJ,CAECxB,QAAQ,GAAD,mBAAMwB,EAAYxB,SAAlB,CAA2BU,MAG7Bc,KAGR7N,EAAMqC,WAAW,CAChBlC,MAAOX,GACPqB,UAAW,CACVY,WAEDpB,KAAM,CACLmK,kBAAkB,YAAKoD,SAIxBxC,OAAM,SAAC7I,GACT8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,QACnClD,QAAQC,IAAIP,MAEb6K,EAAS,MA4BJ9B,SAAU,SAAC/I,GAAD,OAAO6K,EAAS7K,EAAEgJ,OAAO7K,QACnCA,MAAOgK,EAAU,cAAgB6B,EACjCvB,KAAK,OACLS,YAAY,2BACZqC,WAAS,Q,8yBC5IT,IAAMC,GAAgBpP,IAAH,KASvBC,EACAC,GAWUmP,IARcrP,IAAH,KAMrBG,GAEgCH,IAAH,OAQnBsP,GAActP,IAAH,KAMrBI,GC6FYmP,GA1HE,SAAC,GAAiB,IAAfzM,EAAc,EAAdA,QACbgE,EAAS0I,eADkB,EAGJhE,aAAYjB,IAAlCkB,EAH0B,qBAKxBnK,EACLiK,aAASjL,GADZoB,KAAQJ,SAGTmO,aAAgBL,GAAe,CAC9BlN,UAAW,CAAEY,WACb4M,mBAF8B,YAO1B,IAJOrO,EAIR,EAJFyF,OAAUzF,MAEDsO,EAEP,EAHFC,iBACClO,KAAQiO,aAGT,GAAIrO,EAAS8B,SAAWuM,EAAapD,UAAUjK,GAA/C,CADE,IAIMuJ,EAAsBxK,EAAME,UAAU,CAAEC,MAAOX,GAAmBqB,UAAW,CAAEY,aAA/E+I,kBAERxK,EAAMqC,WAAW,CAChBlC,MAAOX,GACPqB,UAAW,CAAEY,WACbpB,KAAM,CAAEmK,kBAAkB,GAAD,mBAAMA,GAAN,CAAyB8D,OAEnDlE,EAAmB,CAAEvJ,UAAW,CAAEI,GAAIQ,SA1BP,MA8BCgI,IAAMkB,SAAS,IA9BhB,oBA8B1B6D,EA9B0B,KA8BfC,EA9Be,OA+BKhF,IAAMkB,SAAS,GA/BpB,oBA+B1B+D,EA/B0B,KA+BbC,EA/Ba,OAgCDlF,IAAMkB,SAAS,IAhCd,oBAgC1BiE,EAhC0B,KAgChBC,EAhCgB,OAiCGpF,IAAMkB,SAAS,GAjClB,oBAiC1BmE,EAjC0B,KAiCdC,EAjCc,KAqCjCC,qBAAU,WACTvJ,EACEtF,MAAM,CACNA,MAAOX,GACPqB,UAAW,CACVY,aAGDwN,MAAK,SAACC,GAENH,EAAcI,KAAKC,KAAKF,EAAI7O,KAAKmK,kBAAkBgD,OAZtC,IAab,IAAI6B,EAbS,EAaSX,EAClBY,EAAMD,EAdG,EAebZ,EAAaS,EAAI7O,KAAKmK,kBAAkB+E,MAAMF,EAAOC,IACrDT,GAAY,SAACD,GAAD,4BAAkBA,GAAlB,YAA+BM,EAAI7O,KAAKmK,0BAEpDY,OAAM,SAAC7I,GACPM,QAAQC,IAAI,sBAAuBP,MAErC,IAAMiN,EAAa/J,EACjBgK,WAAW,CACXtP,MAAOX,GACPqB,UAAW,CACVY,aAGDiO,WAAU,YAAe,IAAZrP,EAAW,EAAXA,KACb0O,EAAcI,KAAKC,KAAK/O,EAAKmK,kBAAkBgD,OA7BlC,IA8BbiB,EAAapO,EAAKmK,mBAClBqE,EAAYxO,EAAKmK,sBAGnB,OAAO,WACNgF,EAAWG,iBAEV,CAAClO,IAkBJgI,IAAMuF,WAAU,WACf,IAAIY,EAPQ,WACZ,IAAIP,EAlDW,EAkDOX,EAClBY,EAAMD,EAnDK,EAoDf,OAAOT,EAASW,MAAMF,EAAOC,GAIhBO,GACbpB,GAAa,SAACpO,GAAD,4BAAcA,GAAd,YAAuBuP,SAClC,CAAClB,IAEJ,IArBqBoB,EA8BrB,OACC,oCACEtB,EAAUhB,OAAS,GACnB,+BALKkB,GAAeI,EAAa,IAO/B,0BAAMhJ,UAAU,qBAAqB8F,QAdvB,WAClB+C,GAAe,SAACpO,GAAD,OAAWA,EAAQ,OAa9B,uBAnCgBuP,EAuCJtB,EAtCTsB,EAAKC,QAAO,SAACC,EAAUC,GAC7B,IAAIC,EAAcF,EAClB,OAAIA,EAASG,QAAQF,IAAY,EACzBD,GAERE,EAAY7C,KAAK4C,GACVC,KACL,KA+BwB5D,KAAI,SAAC1B,EAASwF,GAAV,OAC3B,kBAAC,GAAD,CAAa5D,IAAK5B,EAAQ3J,GAAI2J,QAASA,EAASnJ,QAASA,UCjHzD4O,GAAS,CACdtQ,KAAM,CACLuQ,QAAS,OACTC,WAAY,SACZC,OAAQ,UACRlD,UAAW,KAGPmD,GAAO,SAAC,GAA4B,IAA1B1Q,EAAyB,EAAzBA,KAAMiM,EAAmB,EAAnBA,aACrB,OACC,yBAAKhE,MAAOqI,GAAOtQ,KAAM6L,QAASI,GACjC,kBAAC,GAAD,CAAQnF,IAAK9G,EAAK6C,QAAU7C,EAAK6C,QAAQF,QAAU,mBACnD,2BACC,8BAAO3C,EAAKkM,aAMD,eAAmC,IAAhCyE,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,IAAKlP,EAAc,EAAdA,QAC5BoL,EAAUC,eADgC,EAKfnC,mBAAS,IALM,oBAKzCiG,EALyC,KAK5BC,EAL4B,KAQvC5Q,EACLiK,aAASjL,GADZoB,KAAQJ,SAGHwF,EAAS0I,eAEfa,qBAAU,WACTvJ,EACEtF,MAAM,CACNA,MAAOV,GACPoB,UAAW,CACV8P,SAGD1B,MAAK,SAACC,GAEN2B,EAAU3B,EAAI7O,KAAKuQ,gBAEnBxF,OAAM,SAAC7I,GACPM,QAAQC,IAAI,eAAgBP,QAE5B,CAACoO,IASJ,OACC,oCACC,kBAAC,GAAD,CAAO1J,MAAM,4BAA4BnB,UAAW,eAAiBrE,GACnEmP,EAAYpD,OAAS,GACrB,kBAAC,GAAD,KACEoD,EAAYtE,KAAI,SAACwE,EAAOV,GAAR,OAChB,kBAAC,GAAD,CAAgB5D,IAAKsE,EAAM7P,GAAKmP,EAAGpI,MAAO,CAAE+I,gBAAiB,YAC5D,kBAAC,GAAD,CAAMhR,KAAM+Q,EAAO9E,aAAc,kBAdnB,SAAC/K,GAErB,GADAyP,IACIzQ,EAAS8B,SAAWd,EACvB,OAAO4L,EAAQQ,KAAK,YAErBR,EAAQQ,KAAK,YAAcpM,EAAI,CAAEA,OASY+K,CAAa8E,EAAM7P,YAK9D,yBAAK6E,UAAU,eACd,kBAAC,GAAD,CAAMA,UAAU,WAAW8F,QAAS,kBAAM8E,EAAWjP,KAArD,aC7DUuP,GAfE,SAAAnL,GAAU,IAClBS,EAAiCT,EAAjCS,SAAUR,EAAuBD,EAAvBC,UAAcS,EADP,aACgBV,EADhB,0BAGzB,OACC,qCAAGC,UAAWU,aAAK,CAAC,iBAAkBV,KAAiBS,GACrDD,ICcW,YAACT,GAAW,IAAD,EACQsE,aAAY9C,IADpB,oBAClB4J,EADkB,KACLvG,EADK,KACLA,QADK,EAEoBP,aAAY7C,IAFhC,oBAElB4J,EAFkB,KAEMC,EAFN,KAEHzG,QAFG,EAIEP,aAAYhB,IAAhC3H,EAJkB,qBAMnBiE,EAAS0I,eANU,EAOC1E,IAAMkB,SAAS9E,EAAMxE,OAPtB,oBAOlBA,EAPkB,KAOX+P,EAPW,KASnBvE,EAAUC,eAGP7M,EACLiK,aAASjL,GADZoB,KAAQJ,SAGHoR,EAAa5H,IAAM6H,OAAO,MAC1BC,EAAS9H,IAAM6H,OAAO,MAEtBE,EAAQ/H,IAAM6H,OAAO,MAE3BlD,aAAgBJ,GAAqB,CACpCnN,UAAW,CAAE4Q,WAAW,SAAD,OAAW5L,EAAMxE,MAAMc,KAAKlB,KACnDoN,mBAFoC,YAMhC,IAFMqD,EAEP,EAHFnD,iBACClO,KAAQqR,oBAGLA,EAAoB9P,UAAY3B,EAAS8B,QAC7CP,EAAiB,CAChBX,UAAW,CACVY,QAASJ,EAAMc,KAAKlB,GACpBW,QAAS8P,EAAoB9P,QAC7BF,OAAQgQ,EAAoBhQ,aAMhC,IAAMiQ,EAAoB,SAAC3P,GAC1BA,EAAOI,MAAMkB,SAAQ,SAACsO,GAEjBA,EAAUzP,KAAKlB,KAAOI,EAAMc,KAAKlB,KAGhC2Q,EAAUzP,KAAKR,MAAM6L,SAAWnM,EAAMc,KAAKR,MAAM6L,QAEpD4D,EAASQ,GAINA,EAAUzP,KAAKZ,eAAiBF,EAAMc,KAAKZ,cAE9C6P,EAASQ,QAKbnI,IAAMuF,WAAU,WAEf,IAAM6C,EAAcpM,EAClBgK,WAAW,CACXtP,MAAOb,IAEPoQ,WAAU,YAA2B,IAAhB1N,EAAe,EAAvB3B,KAAQ2B,OACrB2P,EAAkB3P,MAGd8P,EAAcrM,EAClBgK,WAAW,CACXtP,MAAOZ,EACPsB,UAAW,CAAEI,GAAI4E,EAAMkM,uBAAyB9R,EAAS8B,UAEzD2N,WACA,YAIO,IAFGpN,EAEJ,EAHLjC,KACCN,KAAQuC,aAGTqP,EAAkBrP,MAGrB,OAAO,WACNuP,EAAYlC,cACZmC,EAAYnC,iBAEX,CAACtO,IAEJ,IAmEM2Q,EAAY,SAAC/Q,GAClB,IAAMgR,EAAQC,SAASC,iBAAiB,gBAAkBlR,GAEpDmR,EAAYnM,EAAEe,MAAMqL,KAAKJ,GAC/BT,EAAMvB,QAAUmC,EAAU,GAE1BZ,EAAMvB,QAAQqC,QAKf,OACC,kBAAC,GAAD,CAAMrR,GAAG,yBACR,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAUkH,GAAI,GAAIrC,UAAU,qCAC3B,kBAAC,GAAD,CAAQe,IAAKxF,EAAMc,KAAKoQ,MAAM3P,QAAUvB,EAAMc,KAAKoQ,MAAM3P,QAAQF,QAAU,mBAC3E,0BAAMkJ,QAAS,kBAvBC,SAAC3K,GACrB,GAAIhB,EAAS8B,SAAWd,EACvB,OAAO4L,EAAQQ,KAAK,YAErBR,EAAQQ,KAAK,YAAcpM,EAAI,CAAEA,OAmBR+K,CAAa3K,EAAMc,KAAKoQ,MAAMtR,KAAK6E,UAAU,sBAChEzE,EAAMc,KAAKoQ,MAAMtG,YAIrB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAU9D,GAAI,IACb,8BAAO9G,EAAMc,KAAKqQ,eAGpB,kBAAC,GAAD,CAAW3L,IAAKxF,EAAMc,KAAKsQ,UAAY,oBAExC,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUzK,MAAO,CAAE0K,WAAY,EAAGC,cAAe,IAChD,yBAAK7M,UAAU,0BACd,0BAAMA,UAAU,QAAQ8F,QAAS,kBA7CX3K,EA6CkCI,EAAMc,KAAKlB,QA5CjEI,EAAMc,KAAKR,MAAM6L,QAGtBwE,EAAU/Q,IAJc,IAACA,IA8CpBI,EAAMc,KAAKR,MAAM6L,OADnB,UAGA,8BAAOnM,EAAMc,KAAKZ,aAAlB,eAGF,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAUyG,MAAO,CAAE0K,WAAY,EAAGC,cAAe,IAChD,yBAAK7M,UAAU,0BACZ4E,GAAYyG,EAcb,aAbA,4BACCvF,QAtFa,WACd2F,EAAOtB,QAAQ3J,SAAS,GAAGsM,UAAUC,SAAS,eAxBlD3B,EAAY,CACXrQ,UAAW,CACViS,gBAAiB,CAChBrR,QAASJ,EAAMc,KAAKlB,GACpBW,QAAS3B,EAAS8B,WAInBkN,MAAK,SAACC,GACN1N,EAAiB,CAChBX,UAAW,CACVY,QAASJ,EAAMc,KAAKlB,GACpBW,QAAS3B,EAAS8B,OAClBL,OAAQ,eAIV0J,OAAM,SAAC7I,GACP8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,QACnClD,QAAQC,IAAIP,MAQd0O,EAAU,CACTpQ,UAAW,CACVkS,cAAe,CACdtR,QAASJ,EAAMc,KAAKlB,GACpBW,QAAS3B,EAAS8B,WAInBkN,MAAK,SAACC,GACN1N,EAAiB,CAChBX,UAAW,CACVY,QAASJ,EAAMc,KAAKlB,GACpBW,QAAS3B,EAAS8B,OAClBL,OAAQ,aAIV0J,OAAM,SAAC7I,GACP8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,QACnClD,QAAQC,IAAIP,OAgETyF,MAAO,CAAEC,cAAe,cACxBnC,UAAU,qCACV6D,IAAK4H,GA/DU,WAAoB,IAAnByB,EAAkB,uDAAP,GAEhC,OAAOA,EAASC,WAAU,SAAChS,GAAD,OAAQA,IAAOhB,EAAS8B,WAAW,EA+DvDmR,CAAa7R,EAAMc,KAAKR,OACxB,uBAAGmE,UAAU,gCAAgCkC,MAAO,CAAEmL,SAAU,MAEhE,uBAAGrN,UAAU,8BAA8BkC,MAAO,CAAEmL,SAAU,OAMjE,kBAAC,GAAD,CAAMrN,UAAU,cAAc8F,QAAS,kBAAMyF,EAAWpB,QAAQmD,UAC/D,kBAAC,GAAD,CAAc9M,SAAS,UAAU0B,MAAO,CAAEmL,SAAU,SAIvD,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE9R,EAAMc,KAAKlB,IAAM,kBAAC,GAAD,CAAUQ,QAASJ,EAAMc,KAAKlB,GAAIuL,IAAKnL,EAAMc,KAAKqO,SAEpE,kBAAC,GAAD,CAAY7G,IAAK0H,EAAY5P,QAASJ,EAAMc,KAAKlB,MAEjDI,EAAMc,KAAKR,MAAM6L,OAAS,GAC1B,kBAAC,GAAD,KACC,kBAAC6F,GAAD,CAAa5R,QAASJ,EAAMc,KAAKlB,GAAIyP,WA9DtB,WAClBc,EAAMvB,QAAQqD,SA6DkD3C,IAAKtP,EAAMc,KAAKR,WCjOnE4R,GAhBA,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,eAAgBxR,EAAiD,EAAjDA,OAAQyR,EAAyC,EAAzCA,YAAa1B,EAA4B,EAA5BA,sBAEtD,OACC,kBAAC,KAAD,CACClC,KAAM2D,EACNE,WAAY1R,EAAOwL,OACnBmG,QAASF,EACTG,OAAQ,kBAACC,GAAD,OAEP7R,EAAOsK,KAAI,SAACjL,GAAD,OACX,kBAAC,GAAD,CAAO0Q,sBAAuBA,EAAuB1Q,MAAOA,EAAOmL,IAAKnL,EAAMc,KAAKlB,UCJxE,I,MAAA,YAAqB,IAAlByP,EAAiB,EAAjBA,WAAiB,EACFvG,aAAYzC,IADV,oBAC3BoM,EAD2B,KACfpJ,EADe,KACfA,QADe,EAGHP,aAAYf,IAApCtH,EAH2B,uBAKZqI,aAAYb,IAA3ByK,EAL2B,qBAQzB9T,EACLiK,aAASjL,GADZoB,KAAQJ,SARyB,EAWV0K,mBAAS,MAXC,oBAW3BqJ,EAX2B,KAWrBC,EAXqB,OAYItJ,mBAAS,IAZb,oBAY3B6H,EAZ2B,KAYd0B,EAZc,OAcFvJ,mBAAS,IAdP,oBAc3BwJ,EAd2B,KAcjBC,EAdiB,KAgBlChG,aAAgBH,GAAa,CAC5BI,mBAD4B,YAMzB,EAJF5I,OAAUzF,MAIP,IAFMqU,EAEP,EAHF9F,iBACClO,KAAQgU,WAGLA,EAAW9B,MAAMtR,KAAOhB,EAAS8B,QAErCgS,EAAY,CAAElT,UAAW,CAAEE,aAAcsT,QAI3C,IAuCMC,EAAkB,SAAC/R,GACxB0R,EAAQ1R,EAAEgJ,OAAOgJ,MAAM,KAGlBC,EAAe,SAAC5E,GACrB,IAAM6E,EAAS,GAQf,OAPK7E,EAAOoE,KAEApE,EAAO4C,YAEP5C,EAAOuE,WAClBM,EAAON,SAAW,mCAFlBM,EAAOjC,YAAc,iDAFrBiC,EAAOT,KAAO,6BAMRS,GAGR,OACC,oCACC,kBAAC,GAAD,CAAOxN,MAAM,UACZ,yBAAKnB,UAAU,0BACd,kBAAC,GAAD,CAAMA,UAAU,cACf,kBAAC,GAAD,CAAcQ,SAAS,gBACvB,2BAAO0E,KAAK,OAAO0J,QAASJ,KAE7B,yBAAKxO,UAAU,qBACd,2BAAOA,UAAU,qBAAqBkF,KAAK,OAAO0J,QAASJ,MAG7D,kBAAC,GAAD,CACCrT,GAAG,cACHuK,KAAK,cACLR,KAAK,OACLlB,MAAM,uCACNF,eAAe,WACf0B,SAAU,SAAC/I,GAAD,OAAO2R,EAAe3R,EAAEgJ,OAAO7K,QACzCA,MAAO8R,IAER,yBAAK1M,UAAU,gBACd,4BACCpF,MAAOyT,EACP7I,SAAU,SAAC/I,GAAD,OAAO6R,EAAY7R,EAAEgJ,OAAO7K,QACtCO,GAAG,WACHuK,KAAK,WACLxD,MAAO,CAAEsI,QAAS,QAASqE,WAAY,YAEvC,4BAAQjU,MAAM,IAAd,mBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,WAIF,yBAAKoF,UAAU,eACd,kBAAC,GAAD,CAAM6F,SAAUjB,EAAS5E,UAAU,WAAW8F,QA/F9B,WACnB,IAAM6I,EAASD,EAAa,CAAER,OAAMxB,cAAa2B,aAEjD,GAAIS,OAAOC,KAAKJ,GAAQjH,OAAS,EAAjC,CACC,IAAMsH,EAAY,GAClB,IAAK,IAAItI,KAAOiI,EACfK,EAAUzH,KAAKoH,EAAOjI,IAEvBnB,GAAM,CAAE9H,QAASuR,EAAUC,KAAK,KAAMhP,MAAO,aAI9C+N,EAAS,CACRjT,UAAW,CACVmU,UAAW,CACVzC,MAAOtS,EAAS8B,OAChBV,MAAO2S,EACPxB,cACAyC,YAAa,GACbd,eAIDlF,MAAK,SAACC,GACNkF,EAAY,IACZH,EAAQ,MACRC,EAAe,IACfxD,IACArF,GAAM,CAAE9H,QAAS,qBAAsBwC,MAAO,UAE9CjE,EAAqB,CAAEjB,UAAW,CAAEQ,MAAO6N,EAAI7O,KAAK6U,YAAanT,OAAQ9B,EAAS8B,aAElFqJ,OAAM,SAAC7I,GACP8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,QACnClD,QAAQC,IAAI,sBAAuBP,QA6DlC,SAGA,kBAAC,GAAD,CAAMoJ,SAAUjB,EAAS5E,UAAU,WAAW8F,QAAS8E,GAAvD,SAGChG,GAAW,kBAACmJ,GAAD,WCnIF,eAAa,IAAV5R,EAAS,EAATA,GAGXuP,EAAQ/H,IAAM6H,OAAO,MAE3B7H,IAAMuF,WAAU,WACf,IAAMiD,EAAQC,SAASC,iBAAiB,UAElCC,EAAYnM,EAAEe,MAAMqL,KAAKJ,GAC/BT,EAAMvB,QAAUmC,EAAU,MAQ3B,OACC,oCACC,kBAAC,GAAD,CAAMnR,GAAG,sBACR,kBAAC,GAAD,CAAY6E,UAAU,iBAAiB7E,GAAG,wBACzC,kDAGD,kBAAC,GAAD,KACC,yBAAK6E,UAAU,oBACd,kBAAC,GAAD,CAAQe,IAAK5E,EAAGW,QAAUX,EAAGW,QAAQF,QAAU,mBAC/C,sEAGF,kBAAC,GAAD,CAAYoD,UAAU,SAAS7E,GAAG,wBACjC,kBAAC,GAAD,CAAM6E,UAAU,YAAY8F,QApBd,WACjB4F,EAAMvB,QAAQqC,SAoBV,kBAAC,GAAD,CAAchM,SAAS,cAAc0B,MAAO,CAAEmL,SAAU,QAG1D,kBAACgC,GAAD,CAAezE,WArBC,WAClBc,EAAMvB,QAAQqD,cChBD,cAAO,IAAD,EACwBpJ,aAAS5K,GAA7Ce,EADY,EACZA,KAAMqK,EADM,EACNA,QAAS0K,EADH,EACGA,MAAOC,EADV,EACUA,UACxB5P,EAAS0I,eAFK,EAIc1E,IAAMkB,SAAS,IAJ7B,oBAIb2K,EAJa,KAIFC,EAJE,KA0BpB,OAhBA9L,IAAMuF,WAAU,WAEf,IAAMQ,EAAa/J,EACjBgK,WAAW,CACXtP,MAAOb,IAEPoQ,WAAU,YAA2B,IAAhB1N,EAAe,EAAvB3B,KAAQ2B,OACjBsT,EAAU9H,SAAWxL,EAAOI,MAAMoL,QACrC+H,EAAavT,EAAOI,UAGvB,OAAO,WACNoN,EAAWG,iBAEV,IAGF,oCACEyF,GAAS/J,GAAM,CAAE9H,QAAS6R,EAAM7R,QAASwC,MAAO,QAChD2E,GAAW,kBAACmJ,GAAD,MACXxT,GAAQA,EAAK4B,IACb,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAUkG,GAAI,GAAIC,GAAI,EAAGG,SAAU,EAAGF,GAAI,EAAGG,SAAU,GACtD,kBAAC,GAAD,CAAcvG,GAAI5B,EAAK4B,OAIzB5B,GAAQA,EAAK2B,QACb,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAUmG,GAAI,GAAIC,GAAI,EAAGG,SAAU,EAAGF,GAAI,EAAGG,SAAU,GACtD,kBAAC,GAAD,CACCxG,OAAQsT,EACR7B,YAAapT,EAAK2B,OAAOwT,SAAS/B,cAAe,EACjDD,eAAgB,WACf6B,EAAU,CACTxU,UAAW,CACV4U,MAAOpV,EAAK2B,OAAOwT,SAASE,WAE7BC,YAAa,SAACC,EAAD,GAA0C,IAAvBC,EAAsB,EAAtBA,gBACzBC,EAAWD,EAAgB7T,OAAOI,MAClCoT,EAAWK,EAAgB7T,OAAOwT,SACxC,OAAOM,EAAStI,OACb,CACAxL,OAAQ,CACPb,WAAYyU,EAAe5T,OAAOb,WAClCiB,MAAM,GAAD,mBAAMwT,EAAe5T,OAAOI,OAA5B,YAAsC0T,IAC3CN,YAEDvT,GAAI2T,EAAe3T,IAEnB2T,YC5DEG,GARQ,SAAC,GAAiB,IAAfnT,EAAc,EAAdA,QACzB,OACC,yBAAKkD,UAAU,WACd,yBAAKe,IAAKjE,EAAUA,EAAQF,QAAU,iBAAkBqE,IAAI,eAAe9F,GAAG,UAC9E,yBAAK4F,IAAKjE,EAAUA,EAAQF,QAAU,iBAAkBqE,IAAI,eAAe9F,GAAG,qBCIlE,eAAoC,IAAjCyP,EAAgC,EAAhCA,WAAYsF,EAAoB,EAApBA,cAAoB,EACX7L,aAAYxC,IADD,oBAC1CsO,EAD0C,KACxBvL,EADwB,KACxBA,QAGhBzK,EACLiK,aAASjL,GADZoB,KAAQJ,SAJwC,EAOzB0K,mBAAS,MAPgB,oBAO1CqJ,EAP0C,KAOpCC,EAPoC,OAQXtJ,mBAAS,IARE,oBAQ1C6H,EAR0C,KAQ7B0B,EAR6B,KA4C3CI,EAAkB,SAAC/R,GACxB0R,EAAQ1R,EAAEgJ,OAAOgJ,MAAM,KAGlBC,EAAe,SAAC5E,GACrB,IAAM6E,EAAS,GAMf,OALK7E,EAAOoE,KAEApE,EAAO4C,cAClBiC,EAAOjC,YAAc,kDAFrBiC,EAAOT,KAAO,6BAIRS,GAGR,OACC,oCACC,kBAAC,GAAD,CAAOxN,MAAM,SAASnB,UAAU,qBAC/B,yBAAKA,UAAU,0BACd,kBAAC,GAAD,CAAMA,UAAU,cACf,kBAAC,GAAD,CAAcQ,SAAS,gBACvB,2BAAO0E,KAAK,OAAO0J,QAASJ,KAE7B,yBAAKxO,UAAU,qBACd,2BACCA,UAAU,qBACV2F,YAAY,yBACZT,KAAK,OACL0J,QAASJ,MAIZ,kBAAC,GAAD,CACCrT,GAAG,cACHuK,KAAK,cACLR,KAAK,OACLlB,MAAM,sCACNF,eAAe,WACf0B,SAAU,SAAC/I,GAAD,OAAO2R,EAAe3R,EAAEgJ,OAAO7K,QACzCA,MAAO8R,IAER,yBAAK1M,UAAU,eACd,kBAAC,GAAD,CAAM6F,SAAUjB,EAAS5E,UAAU,WAAW8F,QA3E5B,WACrB,IAAM6I,EAASD,EAAa,CAAER,OAAMxB,gBAEpC,GAAIoC,OAAOC,KAAKJ,GAAQjH,OAAS,EAAjC,CACC,IAAMsH,EAAY,GAClB,IAAK,IAAItI,KAAOiI,EACfK,EAAUzH,KAAKoH,EAAOjI,IAEvBnB,GAAM,CAAE9H,QAASuR,EAAUC,KAAK,KAAMhP,MAAO,aAM9CkQ,EAAe,CACdpV,UAAW,CACVqV,YAAa,CACZ3D,MAAOtS,EAAS8B,OAChBW,QAASsR,EACTmC,MAAO3D,IAGTlI,OARc,SAQPtK,EARO,GAQ8B,IAApBoW,EAAmB,EAA3B/V,KAAQ+V,cACvBnC,EAAQ,MACRC,EAAe,IACfxD,IACArF,GAAM,CAAE9H,QAAS,qBAAsBwC,MAAO,UAC9CiQ,EAAc,CAAEhW,QAAOoW,qBAEtBhL,OAAM,SAAC7I,GACT8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,QACnClD,QAAQC,IAAI,4BAA6BP,QA4CvC,QAGA,kBAAC,GAAD,CAAMoJ,SAAUjB,EAAS5E,UAAU,WAAW8F,QAAS8E,GAAvD,UAGChG,GAAW,kBAACmJ,GAAD,UCzFF,eAA0C,IAAvCwC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,qBAA2B,EACTnM,aAAYtC,IADH,oBAChD0O,EADgD,KACtB7L,EADsB,KACtBA,QADsB,EAE7BP,aAAYZ,IAA/B5G,EAFgD,qBAK9C1C,EACLiK,aAASjL,GADZoB,KAAQJ,SAL8C,EAQ/B0K,mBAAS,MARsB,oBAQhDqJ,EARgD,KAQ1CC,EAR0C,KAmDjDK,EAAkB,SAAC/R,GACxB0R,EAAQ1R,EAAEgJ,OAAOgJ,MAAM,KAGlBC,EAAe,SAAC5E,GACrB,IAAM6E,EAAS,GAIf,OAHK7E,EAAOoE,OACXS,EAAOT,KAAO,8BAERS,GAGR,OACC,kBAAC,GAAD,KACC,yBAAK3O,UAAU,0BACd,kBAAC,GAAD,CAAMA,UAAU,cACf,kBAAC,GAAD,CAAcQ,SAAS,gBACvB,2BAAO0E,KAAK,OAAO0J,QAASJ,KAE7B,yBAAKxO,UAAU,qBACd,2BACCA,UAAU,qBACV2F,YAAY,iCACZT,KAAK,OACL0J,QAASJ,MAKZ,yBAAKxO,UAAU,eACd,kBAAC,GAAD,CAAM6F,SAAUjB,EAAS5E,UAAU,WAAW8F,QAvE3B,WACrB,IAAM6I,EAASD,EAAa,CAAER,SAE9B,GAAIY,OAAOC,KAAKJ,GAAQjH,OAAS,EAAjC,CACC,IAAMsH,EAAY,GAClB,IAAK,IAAItI,KAAOiI,EACfK,EAAUzH,KAAKoH,EAAOjI,IAEvBnB,GAAM,CAAE9H,QAASuR,EAAUC,KAAK,KAAMhP,MAAO,aAM9CwQ,EAAuB,CACtB1V,UAAW,CACVI,GAAIoV,EACJ3T,QAASsR,KAGT/E,MAAK,SAACC,GACN+E,EAAQ,MACRqC,GAAqB,GACrBjL,GAAM,CAAE9H,QAAS,qBAAsBwC,MAAO,UAHhC,IAKLyQ,EACLtH,EADH7O,KAAQmW,mBAGT7T,EAAgB,CACf9B,UAAW,CACVkB,OAAQ9B,EAAS8B,OACjBa,QAAS4T,QAKXpL,OAAM,SAAC7I,GACP8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,QACnClD,QAAQC,IAAI,4BAA6BP,QAiCzC,QAICmI,GAAW,kBAACmJ,GAAD,SCtFD,eAA4C,IAAzCsC,EAAwC,EAAxCA,MAAOE,EAAiC,EAAjCA,UAAWI,EAAsB,EAAtBA,gBAAsB,EAClBtM,aAAYvC,IADM,oBAClD8O,EADkD,KAC/BhM,EAD+B,KAC/BA,QAD+B,EAE/BP,aAAYZ,IAA/B5G,EAFkD,qBAKhD1C,EACLiK,aAASjL,GADZoB,KAAQJ,SALgD,EAQnB0K,mBAASwL,GARU,oBAQlD3D,EARkD,KAQrC0B,EARqC,KAoDnDM,EAAe,SAAC5E,GACrB,IAAM6E,EAAS,GAIf,OAHK7E,EAAO4C,cACXiC,EAAOjC,YAAc,kDAEfiC,GAGR,OACC,oCACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,yBAAK3O,UAAU,gBACd,8BACC7E,GAAG,sBACH6E,UAAU,uBACVwF,SAAU,SAAC/I,GAAD,OAAO2R,EAAe3R,EAAEgJ,OAAO7K,QACzCA,MAAO8R,IAER,2BAAOzI,QAAQ,sBAAsBjE,UAAU,UAA/C,wBAKD,yBAAKA,UAAU,eACd,kBAAC,GAAD,CAAM6F,SAAUjB,EAAS5E,UAAU,WAAW8F,QAnE7B,WACrB,IAAM6I,EAASD,EAAa,CAAEhC,gBAE9B,GAAIoC,OAAOC,KAAKJ,GAAQjH,OAAS,EAAjC,CACC,IAAMsH,EAAY,GAClB,IAAK,IAAItI,KAAOiI,EACfK,EAAUzH,KAAKoH,EAAOjI,IAEvBnB,GAAM,CAAE9H,QAASuR,EAAUC,KAAK,KAAMhP,MAAO,aAM9C2Q,EAAgB,CACf7V,UAAW,CACVI,GAAIoV,EACJF,MAAO3D,KAGPvD,MAAK,SAACC,GACNgF,EAAe,IACfuC,GAAgB,GAChBpL,GAAM,CAAE9H,QAAS,qBAAsBwC,MAAO,UAHhC,IAKL4Q,EACLzH,EADH7O,KAAQsW,YAGThU,EAAgB,CACf9B,UAAW,CACVkB,OAAQ9B,EAAS8B,OACjBa,QAAS+T,QAKXvL,OAAM,SAAC7I,GACP8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,QACnClD,QAAQC,IAAI,4BAA6BP,QA6BvC,QAICmI,GAAW,kBAACmJ,GAAD,WC9EH+C,GAZG,SAAC,GAAiB,IAAfhU,EAAc,EAAdA,QACpB,OACC,uBAAGoF,MAAO,CAAEuF,aAAc,KACxB3K,EACEA,EAAQuT,MADH,4PCeI,I,MAAA,YAAiB,IAAdpU,EAAa,EAAbA,OAER9B,EACLiK,aAASjL,GADZoB,KAAQJ,SAFqB,EAIciK,aAAS3K,EAAoB,CACxEsB,UAAW,CAAEI,GAAIc,GAAU9B,EAAS8B,UAD7B1B,EAJsB,EAItBA,KAAMqK,EAJgB,EAIhBA,QAAS0K,EAJO,EAIPA,MAAOC,EAJA,EAIAA,UAJA,EAOgB1K,oBAAS,GAPzB,oBAOvB8L,EAPuB,KAONI,EAPM,OAQ0BlM,oBAAS,GARnC,oBAQvB2L,EARuB,KAQDQ,EARC,KAexBtF,EAAQ/H,IAAM6H,OAAO,MAE3B7H,IAAMuF,WAAU,WACf,IAAMiD,EAAQC,SAASC,iBAAiB,sBAElCC,EAAYnM,EAAEe,MAAMqL,KAAKJ,GAC/BT,EAAMvB,QAAUmC,EAAU,MAwB3B,OACC,oCACEgD,GAAS/J,GAAM,CAAE9H,QAAS6R,EAAM7R,QAASwC,MAAO,QAChD2E,GAAW,kBAACmJ,GAAD,MAEXxT,GAAQA,EAAK4B,KAAOF,GAAU,kBAAC,GAAD,CAAgBa,QAASvC,EAAK4B,GAAGW,UAC/DvC,GAAQA,EAAKN,MACb,6BACEgC,GAAU,kBAAC,GAAD,CAAgBa,QAASvC,EAAKN,KAAK6C,UAC9C,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAUuF,GAAI,IACb,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAYH,MAAO,CAAEuF,aAAc,KAClC,8BAAOlN,EAAKN,KAAKkM,WAElB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYjE,MAAO,CAAEsF,UAAW,KAC/B,wCAEAvL,GAAU,kBAAC,GAAD,CAAWa,QAASvC,EAAKN,KAAK6C,WACvCb,GAAU,kBAAC,GAAD,CAAWa,QAASvC,EAAK4B,GAAGW,WACtCb,GACD,oCACE1B,EAAK4B,GAAGW,QACR,yBAAKkD,UAAU,eACd,kBAAC,GAAD,CACC8F,QAAS,kBAAMiL,GAAmB,SAACtW,GAAD,OAAYA,MAC9CuF,UAAU,YAET2Q,EAAkB,SAAW,gBAE/B,kBAAC,GAAD,CACC7K,QAAS,kBAAMkL,GAAwB,SAACvW,GAAD,OAAYA,MACnDuF,UAAU,YAETwQ,EAAuB,SAAW,mBAIrC,yBAAKxQ,UAAU,eACd,kBAAC,GAAD,CAAM8F,QA/DA,WACjB4F,EAAMvB,QAAQqC,QA8DuBxM,UAAU,aAApC,iBAOH2Q,GACA,oCACC,kBAACM,GAAD,CACC/O,MAAO,CAAEsF,UAAW,IACpB6I,MAAO9V,EAAK4B,GAAGW,QAAQuT,MACvBE,UAAWhW,EAAK4B,GAAGW,QAAQ3B,GAC3BwV,gBAAiBI,KAInBP,GACA,kBAACU,GAAD,CACChP,MAAO,CAAEsF,UAAW,IACpB+I,UAAWhW,EAAK4B,GAAGW,QAAQ3B,GAC3BqV,qBAAsBQ,QAO5B,yBAAKhR,UAAU,wCACd,8BAAQ/D,EAAD,2BAAoD1B,EAAKN,KAAKkM,UAApD,sBAGlB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAU9D,GAAI,GAAIC,GAAI,EAAGG,SAAU,EAAGF,GAAI,EAAGG,SAAU,GACtD,kBAAC,GAAD,CACCuJ,sBAAuBhQ,EACvBC,OAAQ3B,EAAKN,KAAKuC,aAAaF,OAAS,GACxCqR,YAAapT,EAAKN,KAAKuC,aAAakT,SAAS/B,cAAe,EAC5DD,eAAgB,WACf6B,EAAU,CACTxU,UAAW,CACV4U,MAAOpV,EAAKN,KAAKuC,aAAakT,SAASE,WAExCC,YAAa,SAACC,EAAD,GAA0C,IAAvBC,EAAsB,EAAtBA,gBACzBC,EAAWD,EAAgB9V,KAAKuC,aAAaF,MAC7CoT,EAAWK,EAAgB9V,KAAKuC,aAAakT,SACnD,OAAOM,EAAStI,OACb,CACAzN,KAAK,eACD6V,EAAe7V,KADf,CAEHuC,aAAc,CACbnB,WAAYyU,EAAe7V,KAAKuC,aAAanB,WAC7CiB,MAAM,GAAD,mBACDwT,EAAe7V,KAAKuC,aAAaF,OADhC,YAED0T,IAEJN,YAEDrU,WAAYyU,EAAe7V,KAAKoB,aAEjCc,GAAI2T,EAAe3T,IAEnB2T,WASX,kBAACqB,GAAD,CAAiBvG,WAnIA,WAClBc,EAAMvB,QAAQqD,SAkI4B0C,cA/HrB,SAAC,GAA8B,IAA5BhW,EAA2B,EAA3BA,MAAOoW,EAAoB,EAApBA,cAAoB,EAC9BpW,EAAME,UAAU,CACpCC,MAAOZ,EACPsB,UAAW,CAAEI,GAAIhB,EAAS8B,UAFnBhC,EAD2C,EAC3CA,KAAMkC,EADqC,EACrCA,GAIdlC,EAAK6C,QAAL,eAAoBwT,GACpBnU,EAAGW,QAAH,eAAkBwT,GAElBpW,EAAMqC,WAAW,CAChBlC,MAAOZ,EACPsB,UAAW,CAAEI,GAAIhB,EAAS8B,QAC1B1B,KAAM,CAAEN,OAAMkC,cCjDF,eAAiB,IAAdiV,EAAa,EAAbA,OAER1W,EACL0J,aAAShL,GADZmB,KAAQG,cAEHqM,EAAUC,eAJc,EAMI3C,aAAY3C,IANhB,oBAMvB2P,EANuB,KAMTzM,EANS,KAMTA,QANS,EAOTP,aAAYnB,IAA1BoO,EAPuB,uBASgBzM,mBAAS,IATzB,oBASvB0M,EATuB,KASNC,EATM,OAUE3M,mBAAS,IAVX,oBAUvB4M,EAVuB,KAUbC,EAVa,KAY9BxI,qBAAU,WACToI,EAAW,CACVvW,UAAW,CAAEN,MAAOmK,OAEnB,CAACA,IACJ,IAqCM8J,EAAe,SAAC5E,GACrB,IAAM6E,EAAS,GAMf,OALK7E,EAAOyH,gBAEAzH,EAAO2H,WAClB9C,EAAO8C,SAAW,wBAFlB9C,EAAOgD,MAAQ,kCAIThD,GAGR,OACC,oCACC,kBAAC,GAAD,CACC/T,MAAO2W,EACP/L,SAAU,SAAC/I,GAAD,OAAO+U,EAAmB/U,EAAEgJ,OAAO7K,QAC7CsK,KAAK,OACLlB,MAAM,oBACN7I,GAAG,WACHuK,KAAK,WACL5B,eAAe,aAEhB,kBAAC,GAAD,CACClJ,MAAO6W,EACPjM,SAAU,SAAC/I,GAAD,OAAOiV,EAAYjV,EAAEgJ,OAAO7K,QACtCsK,KAAK,WACLlB,MAAM,WACN7I,GAAG,WACHuK,KAAK,WACL5B,eAAe,aAEhB,yBAAK9D,UAAU,eACd,kBAAC,GAAD,CAAM6F,SAAUnL,EAAesF,UAAU,WAAW8F,QApExC,WACd,IAAM6I,EAASD,EAAa,CAAE6C,kBAAiBE,aAC/C,GAAI3C,OAAOC,KAAKJ,GAAQjH,OAAS,EAAjC,CACC,IAAMsH,EAAY,GAClB,IAAK,IAAItI,KAAOiI,EACfK,EAAUzH,KAAKoH,EAAOjI,IAEvBnB,GAAM,CAAE9H,QAASuR,EAAUC,KAAK,KAAMhP,MAAO,aAI9CoR,EAAW,CACVtW,UAAW,CACV6W,WAAY,CACXL,gBAAiBA,EAAgBM,OACjCJ,SAAUA,EAASI,SAGrBrN,OAPU,SAOHtK,EAPG,GAO+B,IAAjBmX,EAAgB,EAAxB9W,KAAQ8W,WACflX,EAAaD,EAAME,UAAU,CACpCC,MAAOlB,IADAgB,SAIRD,EAAMI,UAAU,CACfC,KAAM,CAAEJ,SAAS,eAAMA,EAAP,GAAoBkX,MAErClT,aAAa2T,QAAQ,YAAazT,KAAK0T,UAAUV,IACjDW,YAAW,WACVjL,EAAQQ,KAAK,OACX,MAEFjC,OAAM,SAAC7I,GACLA,EAAEa,cAAcoK,OAAS,EAC5BnC,GAAM,CAAE9H,QAAShB,EAAEa,cAAc,GAAGG,QAASwC,MAAO,QAC9CsF,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,aAkCzC,WAGA,kBAAC,GAAD,CAAM4F,SAAUnL,EAAeoL,QAASsL,EAAQpR,UAAU,YAA1D,c,6BC5FSiS,GAAoB,WAAO,IAAD,EACR5N,aAAYrC,IADJ,oBAC/BkQ,EAD+B,KACrBtN,EADqB,KACrBA,QAERlK,EACL0J,aAAShL,GADZmB,KAAQG,cAH6B,EAKjB2J,aAAYnB,IAA1BoO,EAL+B,qBAOhCvK,EAAUC,eAEhBrD,IAAMuF,WAAU,WACfoI,EAAW,CACVvW,UAAW,CAAEN,MAAOmK,OAEnB,CAACA,IAyBJ,MAAO,CAvBoB,SAAC,GAAiC,IAA/BuN,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACxCF,EAAO,CACNnX,UAAW,CACV6W,WAAY,CAAEO,YAAWC,iBAE1B5N,OAJM,SAICtK,EAJD,GAIuC,IAArBmY,EAAoB,EAA5B9X,KAAQ8X,eACflY,EAAaD,EAAME,UAAU,CACpCC,MAAOlB,IADAgB,SAGRD,EAAMI,UAAU,CACfC,KAAM,CAAEJ,SAAS,eAAMA,EAAP,GAAoBkY,MAErClU,aAAa2T,QAAQ,YAAazT,KAAK0T,UAAUM,IACjDL,YAAW,WACVjL,EAAQQ,KAAK,OACX,MAEFjC,OAAM,SAAC7I,GACLA,EAAEa,cAAcoK,OAAS,EAC5BnC,GAAM,CAAE9H,QAAShB,EAAEa,cAAc,GAAGG,QAASwC,MAAO,QAC9CsF,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,YAGhB,CAAEvF,mBCzChB,cAAO,IAAD,EAC4BuX,KAD5B,oBACbK,EADa,KACS5X,EADT,KACSA,cAQ7B,OACC,kBAAC,KAAD,CACCwH,MAAO,CAAEqQ,WAAY,UAAW9K,aAAc,IAC9C+K,MAAM,kBACNC,SAVuB,SAACC,GAAc,IAC/BC,EAAgBD,EAAhBC,YACRL,EAAmB,CAAEH,UAAWQ,EAAaP,aAAc,cAS1DQ,OAAQ,SAACC,GACR,OACC,kBAAC,uBAAD,CACChN,SAAUgN,EAAYC,YAAcpY,EACpCoL,QAAS+M,EAAY/M,SAFtB,6B,SChBU,cAAO,IAAD,EAC4BmM,KAD5B,oBACbK,EADa,KACS5X,EADT,KACSA,cAO7B,OACC,kBAAC,eAAD,CACCwH,MAAO,CAAEqQ,WAAY,UAAW9K,aAAc,IAC9CsL,SAAS,2EACTC,UATuB,SAACN,GAAc,IAC/BO,EAAYP,EAAZO,QACRX,EAAmB,CAAEH,UAAWc,EAASb,aAAc,YAQtDc,aAAc,qBACdN,OAAQ,SAACC,GACR,OACC,kBAAC,qBAAD,CAAmB/M,QAAS+M,EAAY/M,QAASD,SAAUgN,EAAYhN,UAAYnL,GAAnF,2BCZU,cAAO,IAAD,EAC4BuX,KAD5B,oBACbK,EADa,KACS5X,EADT,KACSA,cAEpBG,EACLuJ,aAAS/K,GADZkB,KAAQM,WAHW,EAKIwJ,aAAYlB,IAA7BxI,EALa,qBAOpBgJ,IAAMuF,WAAU,WACXrO,IACHyX,EAAmB,CAAEH,UAAWtX,EAAYuX,aAAc,WAC1DzX,EAAc,CAAEI,UAAW,CAAEH,MAAO,SAEnC,CAACC,IAKJ,OACC,kBAAC,qBAAD,CACCgL,SAAUnL,EACVoL,QANkB,WACnBqN,OAAOC,SAAP,6DAjBe,uBAiBf,gBAMClR,MAAO,CAAEqQ,WAAY,UAAW9K,aAAc,KAH/C,wBCda,eAAiB,IAAdyK,EAAa,EAAbA,OAAa,EACJrN,mBAAS,IADL,oBACvB8M,EADuB,KAChB0B,EADgB,OAEExO,mBAAS,IAFX,oBAEvBsB,EAFuB,KAEbmN,EAFa,OAGQzO,mBAAS,IAHjB,oBAGvB0O,EAHuB,KAGVC,EAHU,OAIE3O,mBAAS,IAJX,oBAIvB4M,EAJuB,KAIbC,EAJa,OAMTrN,aAAYnB,IAA1BoO,EANuB,uBAOIjN,aAAY1C,IAPhB,oBAOvB8R,EAPuB,KAOT7O,EAPS,KAOTA,QAGZlK,EACL0J,aAAShL,GADZmB,KAAQG,cAuCHgU,EAAe,SAAC5E,GACrB,IAAM6E,EAAS,GAgBf,OAfK7E,EAAO6H,MAEA,4CAA4C+B,KAAK5J,EAAO6H,OAExD7H,EAAO3D,SAEP2D,EAAO2H,SAER3H,EAAO2H,SAAS/J,OAAS,EACnCiH,EAAO8C,SAAW,yCACP3H,EAAOyJ,YAERzJ,EAAOyJ,cAAgBzJ,EAAO2H,WACxC9C,EAAO4E,YAAc,yDAFrB5E,EAAO4E,YAAc,+BAJrB5E,EAAO8C,SAAW,uBAFlB9C,EAAOxI,SAAW,4BAFlBwI,EAAOgD,MAAQ,wBAFfhD,EAAOgD,MAAQ,yBAcThD,GAER,OACC,oCACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAY3O,UAAU,yBAAyBkC,MAAO,CAAEuF,aAAc,KACrE,0BAAMvF,MAAO,CAAEyR,WAAY,MAA3B,YAED,kBAAC,GAAD,CACC/Y,MAAO+W,EACPnM,SAAU,SAAC/I,GAAD,OAAO4W,EAAS5W,EAAEgJ,OAAO7K,QACnCsK,KAAK,QACLlB,MAAM,SACN7I,GAAG,QACHuK,KAAK,QACL5B,eAAe,aAEhB,kBAAC,GAAD,CACClJ,MAAOuL,EACPX,SAAU,SAAC/I,GAAD,OAAO6W,EAAY7W,EAAEgJ,OAAO7K,QACtCsK,KAAK,OACLlB,MAAM,WACN7I,GAAG,WACHuK,KAAK,WACL5B,eAAe,aAEhB,kBAAC,GAAD,CACClJ,MAAO6W,EACPjM,SAAU,SAAC/I,GAAD,OAAOiV,EAAYjV,EAAEgJ,OAAO7K,QACtCsK,KAAK,WACLlB,MAAM,WACN7I,GAAG,WACHuK,KAAK,WACL5B,eAAe,aAEhB,kBAAC,GAAD,CACCoB,KAAK,WACLlB,MAAM,mBACN7I,GAAG,cACHuK,KAAK,cACL5B,eAAe,WACflJ,MAAO2Y,EACP/N,SAAU,SAAC/I,GAAD,OAAO+W,EAAe/W,EAAEgJ,OAAO7K,UAE1C,yBAAKoF,UAAU,eACd,kBAAC,GAAD,CAAM6F,SAAUnL,EAAesF,UAAU,WAAW8F,QAlGzC,WACd,IAAM6I,EAASD,EAAa,CAAEiD,QAAOxL,WAAUoN,cAAa9B,aAE5D,GAAI3C,OAAOC,KAAKJ,GAAQjH,OAAS,EAAjC,CACC,IAAMsH,EAAY,GAClB,IAAK,IAAItI,KAAOiI,EACfK,EAAUzH,KAAKoH,EAAOjI,IAEvBnB,GAAM,CAAE9H,QAASuR,EAAUC,KAAK,KAAMhP,MAAO,aAG9CqR,EAAW,CACVvW,UAAW,CAAEN,MAAOmK,KAErB6O,EAAW,CACV1Y,UAAW,CACV6Y,WAAY,CACXzN,SAAUA,EAAS0L,OACnBF,MAAOA,EAAME,OACbJ,SAAUA,EAASI,WAIpB1I,MAAK,SAACC,GACN7D,GAAM,CAAE9H,QAAS,sBAAuBwC,MAAO,UAC/CqR,EAAW,CACVvW,UAAW,CAAEN,OAAO,KAErByX,OAEA5M,OAAM,SAAC7I,GACP8I,GAAM,CAAE9H,QAAShB,EAAEgB,QAASwC,MAAO,QACnClD,QAAQC,IAAI,mBAAoBP,QAkE/B,WAGA,kBAAC,GAAD,CAAMoJ,SAAUnL,EAAeoL,QAASoM,EAAQlS,UAAU,YAA1D,eCrHCuK,GAAS,CACdsJ,eAAgB,CACfC,OAAQ,QACRC,OAAQ,EAERvJ,QAAS,OAETC,WAAY,WAGRuJ,GAAS,SAAC,GAAgB,IAAd5C,EAAa,EAAbA,OACjB,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAYpR,UAAU,yBAAyBkC,MAAO,CAAEuF,aAAc,KACrE,0BAAMvF,MAAO,CAAEyR,WAAY,MAA3B,YAGD,kBAACM,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAAC,GAAD,CAAYnU,UAAU,yBAAyBkC,MAAO,CAAEsF,UAAW,KAClE,0BAAMtF,MAAO,CAAEyR,WAAY,MAA3B,OAED,kBAACS,GAAD,CAAahD,OAAQA,MAIT,cAAO,IAAD,EACgBzN,IAAMkB,UAAS,GAD/B,oBACbwP,EADa,KACDC,EADC,KAEpB,OACC,kBAAC,GAAD,CAASpS,MAAOqI,GAAOsJ,eAAgB7T,UAAU,mBAChD,kBAAC,GAAD,CAAUqC,GAAI,GAAIC,GAAI,EAAGG,SAAU,EAAGF,GAAI,EAAGG,SAAU,GACtD,kBAAC,GAAD,CAAM1C,UAAU,oBACbqU,GAAc,kBAAC,GAAD,CAAQjD,OAAQ,kBAAMkD,GAAc,MACnDD,GAAc,kBAAC,GAAD,CAAQnC,OAAQ,kBAAMoC,GAAc,UCtCzC,cAAO,IAEZ5Z,EACL0J,aAAShL,GADZmB,KAAQG,cAGT,OACC,oCACEA,GAAiB,kBAACqT,GAAD,MAClB,kBAACwG,GAAD,QCHYC,GANK,WACnB,IAAMpB,EAAWqB,eAEjB,OAAO,kBAAC,GAAD,CAASxY,OAAQmX,EAAS3Y,MAAMU,MC+CzBuZ,GAhDW,WACzB,IAAMtB,EAAWqB,eADc,EAGMrQ,aAASxK,GAAe,CAC5DmB,UAAW,CAAE4Z,WAAYvB,EAAS3Y,MAAQ2Y,EAAS3Y,MAAMka,WAAa,MAD/Dpa,EAHuB,EAGvBA,KAAMqK,EAHiB,EAGjBA,QAAS2K,EAHQ,EAGRA,UAIvB,OACC,oCACC,wBAAIvP,UAAU,oBAAd,kBACC4E,GAAW,kBAACmJ,GAAD,MACXxT,GAA2C,IAAnCA,EAAKqa,aAAatY,MAAMoL,QAChC,kBAAC,GAAD,KACC,wBAAIxF,MAAO,CAAEsF,UAAW,KAAxB,qBAGF,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAUnF,GAAI,GAAIC,GAAI,EAAGG,SAAU,EAAGF,GAAI,EAAGG,SAAU,GACtD,kBAAC,GAAD,CACCxG,OAAS3B,GAAQA,EAAKqa,aAAatY,OAAU,GAC7CqR,YAAcpT,GAAQA,EAAKqa,aAAalF,SAAS/B,cAAgB,EACjED,eAAgB,WACf6B,EAAU,CACTxU,UAAW,CACV4U,MAAOpV,GAAQA,EAAKqa,aAAalF,SAASE,WAE3CC,YAAa,SAACC,EAAD,GAA0C,IAAvBC,EAAsB,EAAtBA,gBACzBC,EAAWD,EAAgB6E,aAAatY,MACxCoT,EAAWK,EAAgB6E,aAAalF,SAC9C,OAAOM,EAAStI,OACb,CACAkN,aAAc,CACbvZ,WAAYyU,EAAe8E,aAAavZ,WACxCiB,MAAM,GAAD,mBAAMwT,EAAe8E,aAAatY,OAAlC,YAA4C0T,IACjDN,aAGDI,YCrCG,eAAoB,IAAjB5D,EAAgB,EAAhBA,UAEXvM,EAAS0I,eAETwM,EAAiBrJ,iBAAO,IAErBxQ,EACLoJ,aAAS9K,GADZiB,KAAQS,cAEH+L,EAAUC,eA+BhB,OACC,yBAAKhH,UAAU,gBACd,yBAAKA,UAAU,oBACd,yBAAKA,UAAU,aACd,4BACC,wBAAIA,UAAU,eACb,2BACCwF,SA/Bc,SAAC/I,GACrBoY,EAAe1K,QAAU1N,EAAEgJ,OAAO7K,MAClCmM,EAAQQ,KAAK,kBAAmB,CAAEoN,WAAYlY,EAAEgJ,OAAO7K,SA8BjDsK,KAAK,OACLQ,KAAK,aACLC,YAAY,gBACZxK,GAAG,SACHP,MAAOia,EAAe1K,WAGxB,wBAAInK,UAAU,iBAAiB7E,GAAG,gBAAgB2K,QA5CvB,WACF,IAAzB9K,EAAc0M,QAClBwE,MA2CK,kBAAC,GAAD,CAAc1L,SAAS,kBACvB,0BAAMrF,GAAG,uBAAuBH,EAAc0M,SAE/C,wBAAI1H,UAAU,iBAAiB8F,QAvCpB,WAGf,OAFA3H,aAAa2W,WAAW,aACxBnV,EAAOoV,aACAhO,EAAQiO,QAAQ,UAAW,CAAEC,QAAQ,MAqCvC,uBAAGjV,UAAU,yBAEd,wBAAIA,UAAU,SACb,kBAAC,KAAD,CAASkV,GAAG,YACX,uBAAGlV,UAAU,yBAGf,wBAAIA,UAAU,cACb,kBAAC,KAAD,CAASkV,GAAG,KACX,kBAAC,GAAD,CAAc1U,SAAS,gBCrBhB2U,GAjDA,WACd,OACC,4BAAQnV,UAAU,wCACjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAUqC,GAAI,EAAGG,SAAU,EAAGF,GAAI,EAAGG,SAAU,GAC9C,qCACA,wBAAIzC,UAAU,cACb,4BACC,uBAAGA,UAAU,aAAaoV,KAAK,MAA/B,WAMH,kBAAC,GAAD,CAAU/S,GAAI,EAAGG,SAAU,EAAGF,GAAI,EAAGG,SAAU,GAC9C,uCACA,4BACC,4BACC,uBAAGzC,UAAU,aAAaoV,KAAK,MAA/B,YAID,4BACC,uBAAGpV,UAAU,aAAaoV,KAAK,MAA/B,aAID,4BACC,uBAAGpV,UAAU,aAAaoV,KAAK,MAA/B,cAQJ,kBAAC,GAAD,CAASlT,MAAO,CAAEuF,aAAc,IAC/B,kBAAC,GAAD,CAAUpF,GAAI,IACb,yBAAKrC,UAAU,iCACd,kBAAC,GAAD,cAAc,IAAIqV,MAAOC,cAAzB,0BCzCQ,eAA8B,IAA3B9U,EAA0B,EAA1BA,SAAU0L,EAAgB,EAAhBA,UAC3B,OACC,oCACC,kBAACqJ,GAAD,CAAQrJ,UAAWA,IAClB1L,EACD,kBAAC,GAAD,QCLG+J,GAAS,CACdtQ,KAAM,CACLuQ,QAAS,OACTC,WAAY,SACZC,OAAQ,UACRlD,UAAW,KAiBEgO,GAbM,SAAC,GAAiD,IAA/Cva,EAA8C,EAA9CA,aAAcwa,EAAgC,EAAhCA,0BACrC,OACC,kBAAC,GAAD,CAAgB3P,QAAS,kBAAM2P,EAA0Bxa,KACxD,yBAAKiH,MAAOqI,GAAOtQ,MAClB,kBAAC,GAAD,CAAQ8G,IAAK9F,EAAawR,MAAM3P,QAAU7B,EAAawR,MAAM3P,QAAQF,QAAU,mBAC/E,2BACC,8BAAO3B,EAAayR,YAAczR,EAAayR,YAAc,0BCanDgJ,GAxBU,SAAC,GAAmC,IAAjC1a,EAAgC,EAAhCA,cAAe4P,EAAiB,EAAjBA,WAAiB,EAC5BvG,aAAYf,IAApCtH,EADoD,uBAEvBqI,aAAYd,IAAzC5G,EAFoD,qBAIrDgZ,EAA0B,SAACpa,GAChCqP,IACA5O,EAAqB,CAAEjB,UAAW,CAAEQ,WACpCoB,EAA0B,CAAE5B,UAAW,CAAEQ,YAEpCqa,EAAoB5a,EAAcwL,KAAI,SAACvL,GAAD,OAC3C,kBAAC,GAAD,CACCwa,0BAA2BE,EAC3BjP,IAAKzL,EAAaE,GAClBF,aAAcA,OAIhB,OACC,kBAAC,GAAD,CAAO+E,UAAU,sBAAsBmB,MAAM,6CAC5C,kBAAC,GAAD,KAAayU,KC4GDC,OAxHf,WACC,IAAMlW,EAAS0I,eAENlO,EACLiK,aAASjL,GADZoB,KAAQJ,SAGAa,EACLoJ,aAAS9K,GADZiB,KAAQS,cAaH0Q,EAAQ/H,IAAM6H,OAAO,MAErBU,EAAY,WACjB,IAAMC,EAAQC,SAASC,iBAAiB,wBAElCC,EAAYnM,EAAEe,MAAMqL,KAAKJ,GAC/BT,EAAMvB,QAAUmC,EAAU,GAE1BZ,EAAMvB,QAAQqC,QAKf,OACC,oCACC,kBAAC,KAAD,KACC,kBAAC,KAAD,KACC,kBAAC,KAAD,CACC7O,KAAK,IACLmY,OAAK,EACLlD,OAAQ,YAAiB,EAAd7L,QACV,OAAI5M,EAASoE,MAEX,kBAACwX,GAAD,CAAe7J,UAAWA,GACzB,kBAAC8J,GAAD,OAII,kBAAC,KAAD,CAAUd,GAAG,eAGtB,kBAAC,KAAD,CACCvX,KAAK,UACLmY,OAAK,EACLlD,OAAQ,YAAkB,IAAf7L,EAAc,EAAdA,QACV,GAAIA,EAAQqM,SAAS3Y,OAASsM,EAAQqM,SAAS3Y,MAAMwa,OAEpD,OADAlO,EAAQqM,SAAS3Y,MAAMwa,QAAS,EACzB,kBAACgB,GAAD,MAEJlP,EAAQqM,SAAS8C,OAAOC,MAAM,YAjDxB,SAACC,GAChBzW,EACE0W,OAAO,CACPC,SAAUnT,GACVpI,UAAW,CAAEH,MAAOwb,KAEpB9Q,OAAM,SAAC7I,GACPM,QAAQC,IAAI,QAASP,MA4CjB8Z,CADaxP,EAAQqM,SAAS8C,OAAOlB,QAAQ,SAAU,KAEvDjO,EAAQiO,QAAQ,YAEjB,OAAI7a,EAASoE,MACL,kBAAC,KAAD,CAAU2W,GAAG,MAEd,kBAACe,GAAD,SAGT,kBAAC,KAAD,CACCtY,KAAK,WACLmY,OAAK,EACLlD,OAAQ,WACP,OAAIzY,EAASoE,MAEX,kBAACwX,GAAD,CAAe7J,UAAWA,GACzB,kBAAC,GAAD,OAII,kBAAC,KAAD,CAAUgJ,GAAG,eAGtB,kBAAC,KAAD,CACCvX,KAAK,eACLmY,OAAK,EACLlD,OAAQ,WACP,OAAIzY,EAASoE,MAEX,kBAACwX,GAAD,CAAe7J,UAAWA,GACzB,kBAAC,GAAD,OAII,kBAAC,KAAD,CAAUgJ,GAAG,eAGtB,kBAAC,KAAD,CACCvX,KAAK,kBACLmY,OAAK,EACLlD,OAAQ,WACP,OAAIzY,EAASoE,MAEX,kBAACwX,GAAD,CAAe7J,UAAWA,GACzB,kBAAC,GAAD,OAII,kBAAC,KAAD,CAAUgJ,GAAG,eAItB,kBAAC,KAAD,CAAUA,GAAG,cAGf,kBAAC,GAAD,CAAkBla,cAAeA,EAAe4P,WAtF/B,WAClBc,EAAMvB,QAAQqD,aCjCIgJ,QACW,cAA7BrD,OAAOC,SAASqD,UAEe,UAA7BtD,OAAOC,SAASqD,UAEhBtD,OAAOC,SAASqD,SAASN,MACvB,2DCTNO,IAAS9D,OAER,kBAAC,IAAD,CAAgBjT,OtD2EiBA,IsD1EhC,kBAAC,GAAD,OAGDyM,SAASuK,eAAe,SDoHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3N,MAAK,SAAA4N,GACJA,EAAaC,gBAEd1R,OAAM,SAAAgK,GACLvS,QAAQuS,MAAMA,EAAM7R,c","file":"static/js/main.b2798d36.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nexport const TIMELINE_USER = gql`\r\n\tfragment TimelineUser on User {\r\n\t\tid\r\n\t\tusername\r\n\t\tprofile {\r\n\t\t\tid\r\n\t\t\tpicture\r\n\t\t\tabout\r\n\t\t}\r\n\t}\r\n`;\r\nexport const PHOTO_COMMENT = gql`\r\n\tfragment PhotoComment on Comment {\r\n\t\tid\r\n\t\tcontent\r\n\t\tcreatedAt\r\n\t\tcommentor {\r\n\t\t\t...TimelineUser\r\n\t\t}\r\n\t\ttotalLike\r\n\t\ttotalReply\r\n\t}\r\n\t${TIMELINE_USER}\r\n`;\r\nexport const REPLY_DATA = gql`\r\n\tfragment ReplyData on Reply {\r\n\t\tid\r\n\t\tcontent\r\n\t\tcreatedAt\r\n\t\treplier {\r\n\t\t\t...TimelineUser\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_USER}\r\n`;\r\nexport const REPLY_DATA_FOR_SUB = gql`\r\n\tfragment ReplyDataSub on Reply {\r\n\t\tid\r\n\t\tcontent\r\n\t\tcommentId\r\n\t\tcreatedAt\r\n\t\treplier {\r\n\t\t\t...TimelineUser\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_USER}\r\n`;\r\nexport const TIMELINE_PHOTO = gql`\r\n\tfragment TimelinePhoto on Photo {\r\n\t\tid\r\n\t\tdescription\r\n\r\n\t\tphotoUrl\r\n\r\n\t\ttotalComment\r\n\t\tcategory\r\n\t\tcreatedAt\r\n\t\towner {\r\n\t\t\t...TimelineUser\r\n\t\t}\r\n\t\tlikes\r\n\t}\r\n\r\n\t${TIMELINE_USER}\r\n`;\r\n\r\nexport const PAGE_INFO = gql`\r\n\tfragment PageMetaData on PageInfo {\r\n\t\thasNextPage\r\n\t\tendCursor\r\n\t}\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PHOTO_COMMENT, TIMELINE_PHOTO } from '../fragments';\r\n\r\nexport const GET_AUTH_USER = gql`\r\n\tquery getAuthUser {\r\n\t\tauthUser @client {\r\n\t\t\tuserId\r\n\t\t\ttoken\r\n\t\t}\r\n\t}\r\n`;\r\nexport const GET_SIGNING_IN_OR_UP = gql`\r\n\tquery getSigningInorUp {\r\n\t\tsigningInOrUp @client\r\n\t}\r\n`;\r\nexport const GET_GITHUB_CODE = gql`\r\n\tquery getGithubCode {\r\n\t\tgithubCode @client\r\n\t}\r\n`;\r\n\r\nexport const PHOTO_BY_ID = gql`\r\n\tquery photoById($id: ID!) {\r\n\t\tphoto(id: $id) {\r\n\t\t\tcomment {\r\n\t\t\t\t...PhotoComment\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${PHOTO_COMMENT}\r\n`;\r\n\r\nexport const GET_PHOTO_NOTIFICATIONS = gql`\r\n\tquery getNotifications {\r\n\t\tnotifications @client {\r\n\t\t\t...TimelinePhoto\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_PHOTO}\r\n`;\r\n\r\nexport const GET_ME_PROFILE = gql`\r\n\tquery getMeProfile($userId: ID!) {\r\n\t\tgetMeProfile(userId: $userId) @client {\r\n\t\t\tprofile {\r\n\t\t\t\tpicture\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nimport { TIMELINE_PHOTO, PHOTO_COMMENT, TIMELINE_USER, PAGE_INFO, REPLY_DATA } from '../fragments';\r\n\r\nexport const TIMELINE_DATA = gql`\r\n\tquery getTimelineData($first: Int, $after: String, $sorting: PhotoSortData, $filter: PhotoFilter) {\r\n\t\tphotos(first: $first, after: $after, sorting: $sorting, filter: $filter) {\r\n\t\t\tpageInfo {\r\n\t\t\t\t...PageMetaData\r\n\t\t\t}\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\t... on Photo {\r\n\t\t\t\t\t\t...TimelinePhoto\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tme {\r\n\t\t\t...TimelineUser\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_PHOTO}\r\n\t${TIMELINE_USER}\r\n\t${PAGE_INFO}\r\n`;\r\n\r\nexport const USER_SHARED_PHOTOS = gql`\r\n\tquery user($id: ID!, $first: Int, $after: String, $sorting: PhotoSortData, $filter: PhotoFilter) {\r\n\t\tuser(id: $id) {\r\n\t\t\tusername\r\n\t\t\tprofile {\r\n\t\t\t\tabout\r\n\t\t\t\tpicture\r\n\t\t\t}\r\n\t\t\tsharedPhotos(first: $first, after: $after, sorting: $sorting, filter: $filter) {\r\n\t\t\t\tpageInfo {\r\n\t\t\t\t\t...PageMetaData\r\n\t\t\t\t}\r\n\t\t\t\tedges {\r\n\t\t\t\t\tnode {\r\n\t\t\t\t\t\t... on Photo {\r\n\t\t\t\t\t\t\t...TimelinePhoto\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tme {\r\n\t\t\t...TimelineUser\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_PHOTO}\r\n\t${TIMELINE_USER}\r\n\t${PAGE_INFO}\r\n`;\r\n\r\nexport const USER_INFO = gql`\r\n\tquery getUserInfo {\r\n\t\tme {\r\n\t\t\t...TimelineUser\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_USER}\r\n`;\r\nexport const COMMENTS_ON_PHOTO = gql`\r\n\tquery getComments($photoId: ID!) {\r\n\t\tcommentsByPhotoId(photoId: $photoId) {\r\n\t\t\t...PhotoComment\r\n\t\t\treplies {\r\n\t\t\t\t...ReplyData\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${PHOTO_COMMENT}\r\n\t${REPLY_DATA}\r\n`;\r\nexport const PHOTO_LIKERS = gql`\r\n\tquery photoLikers($ids: [ID!]!) {\r\n\t\tphotoLikers(ids: $ids) {\r\n\t\t\t...TimelineUser\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_USER}\r\n`;\r\n\r\nexport const SEARCH_USERS = gql`\r\n\tquery searchUsers($first: Int, $after: String, $sorting: UserSortData, $searchText: String) {\r\n\t\tsearchUsers(first: $first, after: $after, sorting: $sorting, searchText: $searchText) {\r\n\t\t\tpageInfo {\r\n\t\t\t\t...PageMetaData\r\n\t\t\t}\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\t... on User {\r\n\t\t\t\t\t\t...TimelineUser\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_USER}\r\n\t${PAGE_INFO}\r\n`;\r\n\r\nexport const SEARCH_PHOTOS = gql`\r\n\tquery searchPhotos($first: Int, $after: String, $sorting: PhotoSortData, $searchText: String!) {\r\n\t\tsearchPhotos(first: $first, after: $after, sorting: $sorting, searchText: $searchText) {\r\n\t\t\tpageInfo {\r\n\t\t\t\t...PageMetaData\r\n\t\t\t}\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\t... on Photo {\r\n\t\t\t\t\t\t...TimelinePhoto\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t${TIMELINE_PHOTO}\r\n\t${PAGE_INFO}\r\n`;\r\n","import { GET_AUTH_USER, GET_PHOTO_NOTIFICATIONS } from './queries/local';\r\nimport gql from 'graphql-tag';\r\nimport { TIMELINE_DATA, USER_SHARED_PHOTOS } from './queries/remote';\r\n\r\nexport const resolvers = {\r\n\tMutation: {\r\n\t\tsetAuthUser: (_, { user }, { cache }) => {\r\n\t\t\tconst { authUser } = cache.readQuery({ query: GET_AUTH_USER });\r\n\t\t\tcache.writeData({\r\n\t\t\t\tdata: { authUser: { ...authUser, ...user } },\r\n\t\t\t});\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tsetSigningInOrUp: (_, { state }, { cache }) => {\r\n\t\t\tcache.writeData({\r\n\t\t\t\tdata: { signingInOrUp: state },\r\n\t\t\t});\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tsetGithubCode: (_, { value }, { cache }) => {\r\n\t\t\tcache.writeData({\r\n\t\t\t\tdata: { githubCode: value },\r\n\t\t\t});\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tsetNotification: (_, variables, { cache }) => {\r\n\t\t\tconst { notifications } = cache.readQuery({ query: GET_PHOTO_NOTIFICATIONS });\r\n\r\n\t\t\tcache.writeData({\r\n\t\t\t\tdata: { notifications: [...notifications, variables.notification] },\r\n\t\t\t});\r\n\r\n\t\t\treturn variables.notification;\r\n\t\t},\r\n\t\tupdateTotalCommentCount: (_, variables, { cache, getCacheKey }) => {\r\n\t\t\tconst id = getCacheKey({ __typename: 'Photo', id: variables.id });\r\n\t\t\tconst fragment = gql`\r\n\t\t\t\tfragment updateTotalCount on Photo {\r\n\t\t\t\t\ttotalComment\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\t\t\tconst photo = cache.readFragment({ fragment, id });\r\n\t\t\tconst data = { ...photo, totalComment: photo.totalComment + 1 };\r\n\t\t\tcache.writeData({ id, data });\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tupdateTotalLikes: (_, variables, { cache, getCacheKey }) => {\r\n\t\t\tconst id = getCacheKey({ __typename: 'Photo', id: variables.photoId });\r\n\t\t\tconst fragment = gql`\r\n\t\t\t\tfragment updateTotalLikes on Photo {\r\n\t\t\t\t\tlikes\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\t\t\tconst photo = cache.readFragment({ fragment, id });\r\n\t\t\tlet data;\r\n\t\t\tif (variables.action === 'like') {\r\n\t\t\t\tdata = { ...photo, likes: [...photo.likes, variables.likerId] };\r\n\t\t\t}\r\n\t\t\tif (variables.action === 'unlike') {\r\n\t\t\t\tdata = { ...photo, likes: photo.likes.filter((id) => id !== variables.likerId) };\r\n\t\t\t}\r\n\t\t\tcache.writeData({ id, data });\r\n\t\t\treturn;\r\n\t\t},\r\n\t\taddPhotoToLocalStore(_, { photo, userId }, { cache }) {\r\n\t\t\tconst { photos, me } = cache.readQuery({ query: TIMELINE_DATA });\r\n\r\n\t\t\tconst edgeElem = {\r\n\t\t\t\tnode: {\r\n\t\t\t\t\t...photo,\r\n\t\t\t\t},\r\n\t\t\t\t__typename: 'Edge',\r\n\t\t\t};\r\n\t\t\tphotos.edges = [edgeElem, ...photos.edges];\r\n\r\n\t\t\tcache.writeQuery({\r\n\t\t\t\tquery: TIMELINE_DATA,\r\n\t\t\t\tdata: { photos, me },\r\n\t\t\t});\r\n\r\n\t\t\tif (userId) {\r\n\t\t\t\tupdateSharedPhotos({ cache, photo, userId });\r\n\t\t\t}\r\n\t\t},\r\n\t\tremovePhotoFromLocalStore(_, { photo }, { cache }) {\r\n\t\t\tconst { notifications } = cache.readQuery({ query: GET_PHOTO_NOTIFICATIONS });\r\n\r\n\t\t\tcache.writeQuery({\r\n\t\t\t\tquery: GET_PHOTO_NOTIFICATIONS,\r\n\t\t\t\tdata: { notifications: notifications.filter((picture) => picture.id !== photo.id) },\r\n\t\t\t});\r\n\t\t},\r\n\t\tupdateMeProfile(_, { userId, profile }, { cache, getCacheKey }) {\r\n\t\t\tconst id = getCacheKey({ __typename: 'User', id: userId });\r\n\t\t\tconst fragment = gql`\r\n\t\t\t\tfragment UpdateMeProfile on User {\r\n\t\t\t\t\tprofile {\r\n\t\t\t\t\t\tabout\r\n\t\t\t\t\t\tpicture\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t`;\r\n\t\t\tconst user = cache.readFragment({ fragment, id });\r\n\t\t\tconsole.log('user from cache', user);\r\n\r\n\t\t\tconst data = { ...user, profile: { ...profile } };\r\n\t\t\tconsole.log('data before writing to cache ', data);\r\n\t\t\tcache.writeData({ id, data });\r\n\t\t\treturn null;\r\n\t\t},\r\n\t},\r\n\tQuery: {\r\n\t\tgetMeProfile(_, __, { cache }) {\r\n\t\t\tconst { me } = cache.readQuery({ query: TIMELINE_DATA });\r\n\t\t\treturn me;\r\n\t\t},\r\n\t},\r\n};\r\n\r\nfunction updateSharedPhotos({ cache, photo, userId }) {\r\n\ttry {\r\n\t\tconst { user, me } = cache.readQuery({ query: USER_SHARED_PHOTOS, variables: { id: userId } });\r\n\t\tconst edgeElem = {\r\n\t\t\tnode: {\r\n\t\t\t\t...photo,\r\n\t\t\t},\r\n\t\t\t__typename: 'Edge',\r\n\t\t};\r\n\t\tuser.sharedPhotos.edges = [edgeElem, ...user.sharedPhotos.edges];\r\n\t\tcache.writeQuery({\r\n\t\t\tquery: USER_SHARED_PHOTOS,\r\n\t\t\tvariables: { id: userId },\r\n\t\t\tdata: { user, me },\r\n\t\t});\r\n\t} catch (e) {\r\n\t\t// console.log('error occured updating shared photos', e);\r\n\t}\r\n}\r\n","import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { ApolloLink, split } from 'apollo-link';\r\nimport { onError } from 'apollo-link-error';\r\n// import { HttpLink } from 'apollo-link-http';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\n\r\nimport introspectionQueryResultData from './fragmentTypes.json';\r\n\r\nimport { resolvers } from './resolvers.js';\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n\tif (graphQLErrors)\r\n\t\tgraphQLErrors.forEach(({ message, locations, path }) =>\r\n\t\t\tconsole.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`)\r\n\t\t);\r\n\tif (networkError) console.log(`[Network error]: ${networkError}`);\r\n});\r\n\r\nconst authLink = new ApolloLink((operation, forward) => {\r\n\toperation.setContext(({ headers }) => {\r\n\t\treturn {\r\n\t\t\theaders: {\r\n\t\t\t\t...headers,\r\n\t\t\t\tauthorization: localStorage.getItem('auth_user')\r\n\t\t\t\t\t? `token ${JSON.parse(localStorage.getItem('auth_user')).token}`\r\n\t\t\t\t\t: '',\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n\treturn forward(operation);\r\n});\r\n\r\nconst httpLink = createUploadLink({\r\n\t// uri: 'http://localhost:5000/graphql',\r\n\turi: 'https://instaphotosharing-app.herokuapp.com/graphql',\r\n});\r\nconst wsLink = new WebSocketLink({\r\n\turi: 'ws://instaphotosharing-app.herokuapp.com/graphql',\r\n\t// uri: 'ws://localhost:5000/graphql',\r\n\toptions: { reconnect: true },\r\n});\r\n\r\nconst httpOrWs = split(\r\n\t({ query }) => {\r\n\t\tconst definition = getMainDefinition(query);\r\n\t\treturn definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\r\n\t},\r\n\twsLink,\r\n\thttpLink\r\n);\r\n\r\nconst link = ApolloLink.from([authLink, errorLink, httpOrWs]);\r\n\r\nconst fragmentMatcher = new IntrospectionFragmentMatcher({ introspectionQueryResultData });\r\n\r\nconst cache = new InMemoryCache({ fragmentMatcher });\r\n\r\nconst initialData = {\r\n\tauthUser: {\r\n\t\ttoken: localStorage.getItem('auth_user') ? JSON.parse(localStorage.getItem('auth_user')).token : '',\r\n\t\tuserId: localStorage.getItem('auth_user') ? JSON.parse(localStorage.getItem('auth_user')).userId : '',\r\n\t\t__typename: 'AuthResponse',\r\n\t},\r\n\tsigningInOrUp: false,\r\n\tnotifications: [],\r\n\tgithubCode: '',\r\n};\r\n\r\ncache.writeData({\r\n\tdata: initialData,\r\n});\r\n\r\nconst client = new ApolloClient({\r\n\tcache,\r\n\tlink,\r\n\tconnectToDevTools: true,\r\n\tresolvers,\r\n});\r\nclient.onResetStore(() => {\r\n\tcache.writeData({\r\n\t\tdata: initialData,\r\n\t});\r\n});\r\nexport const createClient = () => client;\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n\treturn (\r\n\t\t<div className=\"progress pink\" {...props}>\r\n\t\t\t<div className=\"indeterminate pink lighten-4\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","export default ({ message, color, outDuration }) => {\r\n\t// eslint-disable-next-line\r\n\tM.toast({ html: message, classes: color, outDuration: outDuration ? outDuration : 375 });\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCard.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardHeader = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-title', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardHeader.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardHeader;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardBody = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-content', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardBody.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardBody;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardAction = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-action', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardAction.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CardAction;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardImage = props => {\r\n\tconst { className, src, children, text, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<div className={clsx(['card-image', className])} {...rest}>\r\n\t\t\t<img src={src} alt={text} />\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCardImage.propTypes = {\r\n\tsrc: PropTypes.string.isRequired,\r\n\tclassName: PropTypes.string,\r\n\ttext: PropTypes.string,\r\n\tchildren: PropTypes.node,\r\n};\r\nexport default CardImage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { Card } from 'components/card';\r\n\r\nconst Modal = ({ children, id, title, className }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div id={id} className={clsx(['modal', className])}>\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<h5 className=\"center-align pink-text\" id=\"modal-title\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tid: PropTypes.string,\r\n\ttitle: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children, ...rest }) => {\r\n\treturn <div className=\"container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Avatar.css';\r\n\r\nconst Avatar = ({ src }) => {\r\n\treturn <img src={src} alt=\"\" className=\"custom-avatar\" />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n\tsrc: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport './Divider.css';\r\nexport default () => {\r\n\treturn <span className=\"divider\"></span>;\r\n};\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PHOTO_COMMENT, REPLY_DATA, TIMELINE_PHOTO } from '../fragments';\r\n\r\nexport const ADD_COMMENT = gql`\r\n\tmutation createComment($comment: CreateCommentData!) {\r\n\t\tcreateComment(comment: $comment) {\r\n\t\t\t...PhotoComment\r\n\t\t\treplies {\r\n\t\t\t\t...ReplyData\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${PHOTO_COMMENT}\r\n\t${REPLY_DATA}\r\n`;\r\n\r\nexport const LIKE_PHOTO = gql`\r\n\tmutation likePhoto($likePhotoData: LikePhoto!) {\r\n\t\tlikePhoto(likePhotoData: $likePhotoData) {\r\n\t\t\tdescription\r\n\t\t}\r\n\t}\r\n`;\r\nexport const UNLIKE_PHOTO = gql`\r\n\tmutation unlikePhoto($unlikePhotoData: UnlikePhoto!) {\r\n\t\tunlikePhoto(unlikePhotoData: $unlikePhotoData) {\r\n\t\t\tdescription\r\n\t\t}\r\n\t}\r\n`;\r\nexport const REPLY_COMMENT = gql`\r\n\tmutation createReply($reply: CreateReplyData!) {\r\n\t\tcreateReply(reply: $reply) {\r\n\t\t\t...ReplyData\r\n\t\t}\r\n\t}\r\n\t${REPLY_DATA}\r\n`;\r\n\r\nexport const SIGN_IN_WITH_CREDENTIALS = gql`\r\n\tmutation signInUsingForm($signinData: FormSigninUserData!) {\r\n\t\tformSignIn(signinData: $signinData) {\r\n\t\t\tuserId\r\n\t\t\ttoken\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const SIGN_UP_USING_FORM = gql`\r\n\tmutation signUpUsingForm($signupData: CreateUserData) {\r\n\t\tformSignUp(newUser: $signupData) {\r\n\t\t\tid\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const ADD_A_PHOTO = gql`\r\n\tmutation createPhoto($photoData: CreatePhotoData!) {\r\n\t\tcreatePhoto(photoData: $photoData) {\r\n\t\t\t...TimelinePhoto\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_PHOTO}\r\n`;\r\n\r\nexport const ADD_USER_PROFILE = gql`\r\n\tmutation createProfile($profileData: CreateProfileData!) {\r\n\t\tcreateProfile(profileData: $profileData) {\r\n\t\t\tid\r\n\t\t\tpicture\r\n\t\t\tabout\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const EDIT_USER_PROFILE = gql`\r\n\tmutation editProfile($id: ID!, $about: String!) {\r\n\t\teditProfile(id: $id, about: $about) {\r\n\t\t\tid\r\n\t\t\tabout\r\n\t\t}\r\n\t}\r\n`;\r\nexport const EDIT_USER_PROFILE_PICTURE = gql`\r\n\tmutation editProfilePicture($id: ID!, $picture: Upload!) {\r\n\t\teditProfilePicture(id: $id, picture: $picture) {\r\n\t\t\tid\r\n\t\t\tpicture\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const SIGN_IN_WITH_PROVIDER = gql`\r\n\tmutation providerSignIn($signinData: ProviderSignInData!) {\r\n\t\tproviderSignIn(signinData: $signinData) {\r\n\t\t\ttoken\r\n\t\t\tuserId\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Flat = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tstyle={{ textTransform: 'capitalize' }}\r\n\t\t\tclassName={clsx(['btn waves-effect waves-light btn-flat product-btn', className])}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nFlat.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Flat;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst GridRow = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<div className={clsx(['row', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nGridRow.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default GridRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst classes = ({ sm, md, lg, smOffset, mdOffset, lgOffset, className }) => {\r\n\tconst s = `s${sm}`;\r\n\tconst m = `m${md}`;\r\n\tconst l = `l${lg}`;\r\n\tconst sOffset = `offset-s${smOffset}`;\r\n\tconst mOffset = `offset-m${mdOffset}`;\r\n\tconst lOffset = `offset-l${lgOffset}`;\r\n\treturn clsx([\r\n\t\t'col',\r\n\t\t{ [s]: sm },\r\n\t\t{ [m]: md },\r\n\t\t{ [l]: lg },\r\n\t\t{ [sOffset]: smOffset },\r\n\t\t{ [mOffset]: mdOffset },\r\n\t\t{ [lOffset]: lgOffset },\r\n\t\tclassName,\r\n\t]);\r\n};\r\nconst GridItem = props => {\r\n\tconst { children, ...rest } = props;\r\n\treturn <div className={classes(rest)}>{children}</div>;\r\n};\r\n\r\nGridItem.propTypes = {\r\n\tsm: PropTypes.number,\r\n\tmd: PropTypes.number,\r\n\tlg: PropTypes.number,\r\n\tsmOffset: PropTypes.number,\r\n\tmdOffset: PropTypes.number,\r\n\tlgOffset: PropTypes.number,\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default GridItem;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const SET_AUTH_USER = gql`\r\n\tmutation setAuthUser($user: AuthResponse!) {\r\n\t\tsetAuthUser(user: $user) @client\r\n\t}\r\n`;\r\nexport const SET_SIGNING_IN_OR_UP = gql`\r\n\tmutation setSigningInOrUp($state: Boolean!) {\r\n\t\tsetSigningInOrUp(state: $state) @client\r\n\t}\r\n`;\r\nexport const SET_GITHUB_CODE = gql`\r\n\tmutation setGithubCode($value: String!) {\r\n\t\tsetGithubCode(value: $value) @client\r\n\t}\r\n`;\r\n\r\nexport const UPDATE_TOTAL_COMMENT_COUNT = gql`\r\n\tmutation UpdateTotalCommentCount($id: ID!) {\r\n\t\tupdateTotalCommentCount(id: $id) @client\r\n\t}\r\n`;\r\n\r\nexport const UPDATE_TOTAL_LIKES = gql`\r\n\tmutation UpdateTotalLikes($photoId: ID!, $action: String!, $likerId: ID!) {\r\n\t\tupdateTotalLikes(photoId: $photoId, action: $action, likerId: $likerId) @client\r\n\t}\r\n`;\r\nexport const ADD_PHOTO_TO_LOCAL_STORE = gql`\r\n\tmutation AddPhotoToLocalStore($photo: Photo!, $userId: ID) {\r\n\t\taddPhotoToLocalStore(photo: $photo, userId: $userId) @client\r\n\t}\r\n`;\r\nexport const REMOVE_PHOTO_FROM_LOCAL_STORE = gql`\r\n\tmutation RemovePhotoFromLocalStore($photo: Photo!) {\r\n\t\tremovePhotoFromLocalStore(photo: $photo) @client\r\n\t}\r\n`;\r\n\r\nexport const SET_PHOTO_NOTIFICATIONS = gql`\r\n\tmutation SetNotification($notification: Photo!) {\r\n\t\tsetNotification(notification: $notification) @client\r\n\t}\r\n`;\r\nexport const UPDATE_ME_PROFILE = gql`\r\n\tmutation UpdateMeProfile($profile: Profile!, $userId: ID!) {\r\n\t\tupdateMeProfile(profile: $profile, userId: $userId) @client\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst InputField = React.forwardRef(({ id, labelClassName, styleLabel, label, ...rest }, ref) => {\r\n\treturn (\r\n\t\t<div className={clsx(['input-field', { 'login-label': styleLabel }])}>\r\n\t\t\t<input {...rest} id={id} ref={ref} />\r\n\t\t\t{id && label && (\r\n\t\t\t\t<label className={labelClassName} htmlFor={id}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nInputField.defaultProps = {\r\n\tlabelClassName: 'active',\r\n};\r\nInputField.propTypes = {\r\n\tid: PropTypes.string,\r\n\tlabelClassName: PropTypes.string,\r\n\tlabel: PropTypes.string,\r\n\tstyleLabel: PropTypes.string,\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\n\r\nimport { ADD_COMMENT } from 'graphql/mutations/remote';\r\nimport { COMMENTS_ON_PHOTO } from 'graphql/queries/remote';\r\nimport { UPDATE_TOTAL_COMMENT_COUNT } from 'graphql/mutations/local';\r\nimport { GET_AUTH_USER, GET_ME_PROFILE } from 'graphql/queries/local';\r\n\r\nimport { Avatar } from 'components';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport './AddComment.css';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { InputField } from 'components/material-fields';\r\nimport Alert from 'components/alert/Alert';\r\n\r\nconst AddComment = React.forwardRef(({ photoId }, ref) => {\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tconst [updateTotalComment] = useMutation(UPDATE_TOTAL_COMMENT_COUNT);\r\n\r\n\tconst { data: meProfileData } = useQuery(GET_ME_PROFILE, { variables: { userId: authUser.userId } });\r\n\r\n\t// console.log('me profile data', meProfileData);\r\n\tconst [addComment, { loading }] = useMutation(ADD_COMMENT, {\r\n\t\tupdate(cache, { data: { createComment } }) {\r\n\t\t\tconst { commentsByPhotoId } = cache.readQuery({ query: COMMENTS_ON_PHOTO, variables: { photoId } });\r\n\t\t\tcache.writeQuery({\r\n\t\t\t\tquery: COMMENTS_ON_PHOTO,\r\n\t\t\t\tvariables: { photoId },\r\n\t\t\t\tdata: { commentsByPhotoId: [...commentsByPhotoId, createComment] },\r\n\t\t\t});\r\n\t\t\tupdateTotalComment({ variables: { id: photoId } });\r\n\t\t},\r\n\t});\r\n\r\n\tconst [comment, setComment] = React.useState('');\r\n\r\n\tconst handleSend = (e) => {\r\n\t\tif (!comment) return;\r\n\r\n\t\tif (e.keyCode === 13 || e.type === 'click') {\r\n\t\t\tconst newComment = {\r\n\t\t\t\tphotoId,\r\n\t\t\t\tcommentor: authUser.userId,\r\n\t\t\t\tcontent: comment,\r\n\t\t\t};\r\n\t\t\taddComment({ variables: { comment: { ...newComment } } }).catch((e) => {\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t});\r\n\t\t\tsetComment('');\r\n\t\t} else return;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"avatar-comment-container2\">\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={2} md={1}>\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\tmeProfileData && meProfileData.getMeProfile.profile\r\n\t\t\t\t\t\t\t\t\t? meProfileData.getMeProfile.profile.picture\r\n\t\t\t\t\t\t\t\t\t: '/img/cam1.jpeg'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t<GridItem sm={10} md={11}>\r\n\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\tvalue={loading ? 'Sending...' : comment}\r\n\t\t\t\t\t\t\tonChange={(e) => setComment(e.target.value)}\r\n\t\t\t\t\t\t\tname=\"comment\"\r\n\t\t\t\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t\t\t\t\tplaceholder=\"Write a comment\"\r\n\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\tonKeyUp={handleSend}\r\n\t\t\t\t\t\t\tclassName=\"write-comment-field\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t\t<div className=\"right-align\">\r\n\t\t\t\t\t<Flat disabled={loading} className=\"btn-auth\" onClick={handleSend}>\r\n\t\t\t\t\t\tSend\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n});\r\nexport default AddComment;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst Collection = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<ul className={clsx(['collection', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nCollection.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default Collection;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst CollectionItem = ({ children, className, ...rest }) => {\r\n\treturn (\r\n\t\t<li className={clsx(['collection-item', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nCollectionItem.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\nexport default CollectionItem;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Avatar } from 'components';\r\nimport moment from 'moment';\r\n\r\nimport { Flat } from 'components/buttons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './ShowComment.css';\r\nimport { InputField } from 'components/material-fields';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { REPLY_COMMENT } from 'graphql/mutations/remote';\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\nimport { COMMENTS_ON_PHOTO } from 'graphql/queries/remote';\r\nimport { Collection, CollectionItem } from 'components/collections';\r\nimport Alert from 'components/alert/Alert';\r\n\r\nconst AvatarComment = ({ user, comment, visitProfile }) => {\r\n\treturn (\r\n\t\t<div className=\"avatar-comment-container-showcomment-comp\">\r\n\t\t\t<Avatar src={user.profile ? user.profile.picture : '/img/cam1.jpeg'} />\r\n\t\t\t<p>\r\n\t\t\t\t<span onClick={visitProfile} className=\"commentor\">\r\n\t\t\t\t\t{user.username}\r\n\t\t\t\t</span>\r\n\t\t\t\t{comment.content}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst Replies = ({ comment, visitProfile }) => {\r\n\treturn (\r\n\t\t<Collection style={{ borderRadius: 15, border: 'solid 2px #e0e0e0' }}>\r\n\t\t\t<CollectionItem className=\"left-align\">Replies to comment</CollectionItem>\r\n\t\t\t{comment.replies.map((reply) => (\r\n\t\t\t\t<CollectionItem key={reply.id}>\r\n\t\t\t\t\t<AvatarComment\r\n\t\t\t\t\t\tuser={reply.replier}\r\n\t\t\t\t\t\tcomment={reply}\r\n\t\t\t\t\t\tvisitProfile={() => visitProfile(reply.replier.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span>{moment(+reply.createdAt).fromNow()}</span>\r\n\t\t\t\t</CollectionItem>\r\n\t\t\t))}\r\n\t\t</Collection>\r\n\t);\r\n};\r\n\r\nexport default ({ comment, photoId }) => {\r\n\tconst history = useHistory();\r\n\r\n\tconst [createReply, { loading }] = useMutation(REPLY_COMMENT);\r\n\r\n\tconst [replyOpen, setReplyOpen] = useState(false);\r\n\tconst [showReplies, setShowReplies] = useState(false);\r\n\tconst [reply, setReply] = useState('');\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tconst visitProfile = (id) => {\r\n\t\tif (authUser.userId === id) {\r\n\t\t\treturn history.push('/profile');\r\n\t\t}\r\n\t\thistory.push('/profile/' + id, { id });\r\n\t};\r\n\r\n\tconst handleReplyClick = () => {\r\n\t\tsetReplyOpen((state) => !state);\r\n\t};\r\n\tconst handleSendReply = (e) => {\r\n\t\tif (e.keyCode !== 13) return;\r\n\t\tif (!reply) return;\r\n\t\tcreateReply({\r\n\t\t\tvariables: {\r\n\t\t\t\treply: {\r\n\t\t\t\t\treplier: authUser.userId,\r\n\t\t\t\t\tcommentId: comment.id,\r\n\t\t\t\t\tcontent: reply,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tupdate(cache, { data: { createReply } }) {\r\n\t\t\t\tconst { commentsByPhotoId } = cache.readQuery({\r\n\t\t\t\t\tquery: COMMENTS_ON_PHOTO,\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tphotoId,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tconst newComments = commentsByPhotoId.map((commentItem) => {\r\n\t\t\t\t\tif (commentItem.id === comment.id) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...commentItem,\r\n\t\t\t\t\t\t\treplies: [...commentItem.replies, createReply],\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn commentItem;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcache.writeQuery({\r\n\t\t\t\t\tquery: COMMENTS_ON_PHOTO,\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tphotoId,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tcommentsByPhotoId: [...newComments],\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t}).catch((e) => {\r\n\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\tconsole.log(e);\r\n\t\t});\r\n\t\tsetReply('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AvatarComment\r\n\t\t\t\tuser={comment.commentor}\r\n\t\t\t\tcomment={comment}\r\n\t\t\t\tvisitProfile={() => visitProfile(comment.commentor.id)}\r\n\t\t\t/>\r\n\t\t\t<div className=\"right-align\" style={{ marginTop: 5, marginBottom: 10 }}>\r\n\t\t\t\t<span>{moment(+comment.createdAt).fromNow()}</span>\r\n\t\t\t\t{comment.replies.length > 0 && (\r\n\t\t\t\t\t<span className=\"comment-replies\" onClick={() => setShowReplies((state) => !state)}>\r\n\t\t\t\t\t\t<span style={{ paddingRight: 2 }}>{comment.replies.length}</span>\r\n\t\t\t\t\t\t{showReplies ? 'Hide' : 'Replies'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t\t<Flat className=\" reply-btn\" onClick={handleReplyClick}>\r\n\t\t\t\t\t{replyOpen ? 'Hide' : 'Reply'}\r\n\t\t\t\t</Flat>\r\n\r\n\t\t\t\t{showReplies && <Replies comment={comment} visitProfile={visitProfile} />}\r\n\r\n\t\t\t\t{replyOpen && (\r\n\t\t\t\t\t<div style={{ paddingLeft: 55 }}>\r\n\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\tonKeyUp={handleSendReply}\r\n\t\t\t\t\t\t\tonChange={(e) => setReply(e.target.value)}\r\n\t\t\t\t\t\t\tvalue={loading ? 'Replying...' : reply}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Type reply and hit Enter\"\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import gql from 'graphql-tag';\r\n\r\nimport { PHOTO_COMMENT, REPLY_DATA_FOR_SUB, REPLY_DATA, TIMELINE_PHOTO } from './fragments';\r\n\r\nexport const COMMENT_ADDED = gql`\r\n\tsubscription onCommentAdded($photoId: ID!) {\r\n\t\tcommentAdded(photoId: $photoId) {\r\n\t\t\t...PhotoComment\r\n\t\t\treplies {\r\n\t\t\t\t...ReplyData\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${PHOTO_COMMENT}\r\n\t${REPLY_DATA}\r\n`;\r\n\r\nexport const REPLY_ADDED = gql`\r\n\tsubscription onReplyAdded {\r\n\t\treplyAdded {\r\n\t\t\t...ReplyDataSub\r\n\t\t}\r\n\t}\r\n\t${REPLY_DATA_FOR_SUB}\r\n`;\r\nexport const PHOTOLIKEDORUNLIKED = gql`\r\n\tsubscription onPhotoLikedOrUnliked($identifier: String!) {\r\n\t\tphotoLikedOrUnliked(identifier: $identifier) {\r\n\t\t\tlikerId\r\n\t\t\taction\r\n\t\t}\r\n\t}\r\n`;\r\nexport const PHOTO_ADDED = gql`\r\n\tsubscription onPhotoAdded {\r\n\t\tphotoAdded {\r\n\t\t\t...TimelinePhoto\r\n\t\t}\r\n\t}\r\n\t${TIMELINE_PHOTO}\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { useApolloClient, useQuery, useSubscription, useMutation } from '@apollo/react-hooks';\r\n\r\nimport { COMMENTS_ON_PHOTO } from 'graphql/queries/remote';\r\nimport { COMMENT_ADDED } from 'graphql/subscriptions';\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\nimport { UPDATE_TOTAL_COMMENT_COUNT } from 'graphql/mutations/local';\r\n\r\nimport ShowComment from './ShowComment';\r\n\r\nconst Comments = ({ photoId }) => {\r\n\tconst client = useApolloClient();\r\n\r\n\tconst [updateTotalComment] = useMutation(UPDATE_TOTAL_COMMENT_COUNT);\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tuseSubscription(COMMENT_ADDED, {\r\n\t\tvariables: { photoId },\r\n\t\tonSubscriptionData({\r\n\t\t\tclient: { cache },\r\n\t\t\tsubscriptionData: {\r\n\t\t\t\tdata: { commentAdded },\r\n\t\t\t},\r\n\t\t}) {\r\n\t\t\tif (authUser.userId === commentAdded.commentor.id) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst { commentsByPhotoId } = cache.readQuery({ query: COMMENTS_ON_PHOTO, variables: { photoId } });\r\n\r\n\t\t\tcache.writeQuery({\r\n\t\t\t\tquery: COMMENTS_ON_PHOTO,\r\n\t\t\t\tvariables: { photoId },\r\n\t\t\t\tdata: { commentsByPhotoId: [...commentsByPhotoId, commentAdded] },\r\n\t\t\t});\r\n\t\t\tupdateTotalComment({ variables: { id: photoId } });\r\n\t\t},\r\n\t});\r\n\r\n\tconst [pagedData, setPagedData] = React.useState([]);\r\n\tconst [currentPage, setCurrentPage] = React.useState(0);\r\n\tconst [comments, setComments] = React.useState([]);\r\n\tconst [totalPages, setTotalPages] = React.useState(0);\r\n\r\n\tconst perPage = 5;\r\n\r\n\tuseEffect(() => {\r\n\t\tclient\r\n\t\t\t.query({\r\n\t\t\t\tquery: COMMENTS_ON_PHOTO,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tphotoId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\t// console.log('res', res);\r\n\t\t\t\tsetTotalPages(Math.ceil(res.data.commentsByPhotoId.length / perPage));\r\n\t\t\t\tlet start = perPage * currentPage;\r\n\t\t\t\tlet end = start + perPage;\r\n\t\t\t\tsetPagedData(res.data.commentsByPhotoId.slice(start, end));\r\n\t\t\t\tsetComments((comments) => [...comments, ...res.data.commentsByPhotoId]);\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log('error from Comments', e);\r\n\t\t\t});\r\n\t\tconst observable = client\r\n\t\t\t.watchQuery({\r\n\t\t\t\tquery: COMMENTS_ON_PHOTO,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tphotoId,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.subscribe(({ data }) => {\r\n\t\t\t\tsetTotalPages(Math.ceil(data.commentsByPhotoId.length / perPage));\r\n\t\t\t\tsetPagedData(data.commentsByPhotoId);\r\n\t\t\t\tsetComments(data.commentsByPhotoId);\r\n\t\t\t});\r\n\r\n\t\treturn function cleanup() {\r\n\t\t\tobservable.unsubscribe();\r\n\t\t};\r\n\t}, [photoId]);\r\n\r\n\tconst deDuplicate = (list) => {\r\n\t\treturn list.reduce((previous, current) => {\r\n\t\t\tlet accumulator = previous;\r\n\t\t\tif (previous.indexOf(current) > -1) {\r\n\t\t\t\treturn previous;\r\n\t\t\t}\r\n\t\t\taccumulator.push(current);\r\n\t\t\treturn accumulator;\r\n\t\t}, []);\r\n\t};\r\n\tconst next = () => {\r\n\t\tlet start = perPage * currentPage;\r\n\t\tlet end = start + perPage;\r\n\t\treturn comments.slice(start, end);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tlet values = next();\r\n\t\tsetPagedData((data) => [...data, ...values]);\r\n\t}, [currentPage]);\r\n\r\n\tconst handleNext = () => {\r\n\t\tsetCurrentPage((state) => state + 1);\r\n\t};\r\n\t// const handlePrevious = () => {\r\n\t// \tsetCurrentPage((state) => state - 1);\r\n\t// };\r\n\tconst showViewMore = () => {\r\n\t\treturn currentPage >= totalPages - 1;\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{pagedData.length > 0 && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{!showViewMore() && (\r\n\t\t\t\t\t\t<span className=\"view-more-comments\" onClick={handleNext}>\r\n\t\t\t\t\t\t\tview more comments\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{deDuplicate(pagedData).map((comment, i) => (\r\n\t\t\t\t\t\t<ShowComment key={comment.id} comment={comment} photoId={photoId} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\r\nimport { Modal, Avatar } from 'components';\r\n\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport { Collection, CollectionItem } from 'components/collections';\r\nimport { PHOTO_LIKERS } from 'graphql/queries/remote';\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\n\r\nconst styles = {\r\n\tuser: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tcursor: 'pointer',\r\n\t\tmarginTop: 10,\r\n\t},\r\n};\r\nconst User = ({ user, visitProfile }) => {\r\n\treturn (\r\n\t\t<div style={styles.user} onClick={visitProfile}>\r\n\t\t\t<Avatar src={user.profile ? user.profile.picture : '/img/cam1.jpeg'} />\r\n\t\t\t<p>\r\n\t\t\t\t<span>{user.username}</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ({ closeModal, ids, photoId }) => {\r\n\tconst history = useHistory();\r\n\r\n\t// console.log('ids', ids);\r\n\r\n\tconst [photoLikers, setLikers] = useState([]);\r\n\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tconst client = useApolloClient();\r\n\r\n\tuseEffect(() => {\r\n\t\tclient\r\n\t\t\t.query({\r\n\t\t\t\tquery: PHOTO_LIKERS,\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tids,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\t// console.log('likers and photoId ', res.data, photoId);\r\n\t\t\t\tsetLikers(res.data.photoLikers);\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log('likers error', e);\r\n\t\t\t});\r\n\t}, [ids]);\r\n\r\n\tconst visitProfile = (id) => {\r\n\t\tcloseModal();\r\n\t\tif (authUser.userId === id) {\r\n\t\t\treturn history.push('/profile');\r\n\t\t}\r\n\t\thistory.push('/profile/' + id, { id });\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal title=\"Users who liked the photo\" className={'likers-modal' + photoId}>\r\n\t\t\t\t{photoLikers.length > 0 && (\r\n\t\t\t\t\t<Collection>\r\n\t\t\t\t\t\t{photoLikers.map((liker, i) => (\r\n\t\t\t\t\t\t\t<CollectionItem key={liker.id + i} style={{ backgroundColor: 'inherit' }}>\r\n\t\t\t\t\t\t\t\t<User user={liker} visitProfile={() => visitProfile(liker.id)} />\r\n\t\t\t\t\t\t\t</CollectionItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Collection>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className=\"right-align\">\r\n\t\t\t\t\t<Flat className=\"btn-auth\" onClick={() => closeModal(photoId)}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Material = props => {\r\n\tconst { children, className, ...rest } = props;\r\n\r\n\treturn (\r\n\t\t<i className={clsx(['material-icons', className])} {...rest}>\r\n\t\t\t{children}\r\n\t\t</i>\r\n\t);\r\n};\r\n\r\nMaterial.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nexport default Material;\r\n","import React from 'react';\r\nimport { useApolloClient, useMutation, useQuery, useSubscription } from '@apollo/react-hooks';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, CardBody, CardImage } from 'components/card';\r\nimport { Divider, Avatar, Alert } from 'components';\r\n\r\nimport { TIMELINE_DATA, USER_SHARED_PHOTOS } from 'graphql/queries/remote';\r\nimport { LIKE_PHOTO, UNLIKE_PHOTO } from 'graphql/mutations/remote';\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\n\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport './Photo.css';\r\nimport { GridRow, GridItem } from 'components/grid';\r\n\r\nimport { AddComment } from 'components/comment';\r\nimport Comments from 'components/comment/Comments';\r\nimport PhotoLikers from 'components/photo-likers/PhotoLikers';\r\nimport { PHOTOLIKEDORUNLIKED } from 'graphql/subscriptions';\r\n\r\nimport { UPDATE_TOTAL_LIKES } from 'graphql/mutations/local';\r\nimport { MaterialIcon } from 'components/icons';\r\n\r\nexport default (props) => {\r\n\tconst [likePhoto, { loading }] = useMutation(LIKE_PHOTO);\r\n\tconst [unlikePhoto, { loading: unliking }] = useMutation(UNLIKE_PHOTO);\r\n\r\n\tconst [updateTotalLikes] = useMutation(UPDATE_TOTAL_LIKES);\r\n\r\n\tconst client = useApolloClient();\r\n\tconst [photo, setPhoto] = React.useState(props.photo);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tconst commentRef = React.useRef(null);\r\n\tconst btnRef = React.useRef(null);\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tuseSubscription(PHOTOLIKEDORUNLIKED, {\r\n\t\tvariables: { identifier: `photo-${props.photo.node.id}` },\r\n\t\tonSubscriptionData({\r\n\t\t\tsubscriptionData: {\r\n\t\t\t\tdata: { photoLikedOrUnliked },\r\n\t\t\t},\r\n\t\t}) {\r\n\t\t\tif (photoLikedOrUnliked.likerId === authUser.userId) return;\r\n\t\t\tupdateTotalLikes({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tphotoId: photo.node.id,\r\n\t\t\t\t\tlikerId: photoLikedOrUnliked.likerId,\r\n\t\t\t\t\taction: photoLikedOrUnliked.action,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t},\r\n\t});\r\n\r\n\tconst updatePhotoStatus = (photos) => {\r\n\t\tphotos.edges.forEach((photoItem) => {\r\n\t\t\t//Retrieves the currently viewed photo\r\n\t\t\tif (photoItem.node.id === photo.node.id) {\r\n\t\t\t\t//Checks if the viewed photo's likes attribute has changed due to like\r\n\t\t\t\t//or unlike operation\r\n\t\t\t\tif (photoItem.node.likes.length !== photo.node.likes.length) {\r\n\t\t\t\t\t//Updates the currently viewed photo so that current number of likes will reflect\r\n\t\t\t\t\tsetPhoto(photoItem);\r\n\t\t\t\t}\r\n\t\t\t\t//Checks if the viewed photo's totalComment attribute has changed due to a user\r\n\t\t\t\t//dropping a comment\r\n\t\t\t\tif (photoItem.node.totalComment !== photo.node.totalComment) {\r\n\t\t\t\t\t//Updates the currently viewed photo so that current number of comments will reflect\r\n\t\t\t\t\tsetPhoto(photoItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tReact.useEffect(() => {\r\n\t\t//Observes the query TIMELINE_DATA for changes when a photo is  liked or unliked\r\n\t\tconst observable1 = client\r\n\t\t\t.watchQuery({\r\n\t\t\t\tquery: TIMELINE_DATA,\r\n\t\t\t})\r\n\t\t\t.subscribe(({ data: { photos } }) => {\r\n\t\t\t\tupdatePhotoStatus(photos);\r\n\t\t\t});\r\n\r\n\t\tconst observable2 = client\r\n\t\t\t.watchQuery({\r\n\t\t\t\tquery: USER_SHARED_PHOTOS,\r\n\t\t\t\tvariables: { id: props.userIdForSharedPhotos || authUser.userId },\r\n\t\t\t})\r\n\t\t\t.subscribe(\r\n\t\t\t\t({\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tuser: { sharedPhotos },\r\n\t\t\t\t\t},\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tupdatePhotoStatus(sharedPhotos);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\treturn function cleanup() {\r\n\t\t\tobservable1.unsubscribe();\r\n\t\t\tobservable2.unsubscribe();\r\n\t\t};\r\n\t}, [photo]);\r\n\r\n\tconst handleUnlike = () => {\r\n\t\tunlikePhoto({\r\n\t\t\tvariables: {\r\n\t\t\t\tunlikePhotoData: {\r\n\t\t\t\t\tphotoId: photo.node.id,\r\n\t\t\t\t\tlikerId: authUser.userId,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tupdateTotalLikes({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tphotoId: photo.node.id,\r\n\t\t\t\t\t\tlikerId: authUser.userId,\r\n\t\t\t\t\t\taction: 'unlike',\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleLike = () => {\r\n\t\tif (btnRef.current.children[0].classList.contains('indigo-text')) {\r\n\t\t\treturn handleUnlike();\r\n\t\t}\r\n\t\tlikePhoto({\r\n\t\t\tvariables: {\r\n\t\t\t\tlikePhotoData: {\r\n\t\t\t\t\tphotoId: photo.node.id,\r\n\t\t\t\t\tlikerId: authUser.userId,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tupdateTotalLikes({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tphotoId: photo.node.id,\r\n\t\t\t\t\t\tlikerId: authUser.userId,\r\n\t\t\t\t\t\taction: 'like',\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t};\r\n\tconst hasUserLiked = (likeList = []) => {\r\n\t\t// console.log('likeList and photoId ', likeList, photo.node.id);\r\n\t\treturn likeList.findIndex((id) => id === authUser.userId) > -1;\r\n\t};\r\n\tconst handleLikesClick = (id) => {\r\n\t\tif (!photo.node.likes.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\topenModal(id);\r\n\t};\r\n\r\n\tconst visitProfile = (id) => {\r\n\t\tif (authUser.userId === id) {\r\n\t\t\treturn history.push('/profile');\r\n\t\t}\r\n\t\thistory.push('/profile/' + id, { id });\r\n\t};\r\n\tconst openModal = (id) => {\r\n\t\tconst elems = document.querySelectorAll('.likers-modal' + id);\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\treturn (\r\n\t\t<Card id=\"timeline-picture-card\">\r\n\t\t\t<CardBody>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12} className=\"timeline-picture-avatar-container\">\r\n\t\t\t\t\t\t<Avatar src={photo.node.owner.profile ? photo.node.owner.profile.picture : '/img/cam1.jpeg'} />\r\n\t\t\t\t\t\t<span onClick={() => visitProfile(photo.node.owner.id)} className=\"pink-text username\">\r\n\t\t\t\t\t\t\t{photo.node.owner.username}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t<span>{photo.node.description}</span>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t\t<CardImage src={photo.node.photoUrl || '/img/cam4.jpeg'} />\r\n\t\t\t</CardBody>\r\n\t\t\t<Divider />\r\n\t\t\t<CardBody style={{ paddingTop: 5, paddingBottom: 5 }}>\r\n\t\t\t\t<div className=\"like-comment-container\">\r\n\t\t\t\t\t<span className=\"likes\" onClick={() => handleLikesClick(photo.node.id)}>\r\n\t\t\t\t\t\t{photo.node.likes.length} likes\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>{photo.node.totalComment} comments</span>\r\n\t\t\t\t</div>\r\n\t\t\t</CardBody>\r\n\t\t\t<Divider />\r\n\t\t\t<CardBody style={{ paddingTop: 0, paddingBottom: 0 }}>\r\n\t\t\t\t<div className=\"like-comment-container\">\r\n\t\t\t\t\t{!loading || !unliking ? (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={handleLike}\r\n\t\t\t\t\t\t\tstyle={{ textTransform: 'capitalize' }}\r\n\t\t\t\t\t\t\tclassName=\"btn waves-effect btn-flat like-btn\"\r\n\t\t\t\t\t\t\tref={btnRef}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{hasUserLiked(photo.node.likes) ? (\r\n\t\t\t\t\t\t\t\t<i className=\"fas  indigo-text fa-thumbs-up\" style={{ fontSize: 22 }}></i>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<i className=\"fas  pink-text fa-thumbs-up\" style={{ fontSize: 22 }}></i>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t'Sending...'\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Flat className=\"comment-btn\" onClick={() => commentRef.current.focus()}>\r\n\t\t\t\t\t\t<MaterialIcon children=\"comment\" style={{ fontSize: 25 }} />\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t</div>\r\n\t\t\t</CardBody>\r\n\t\t\t<Divider />\r\n\t\t\t<CardBody>\r\n\t\t\t\t{photo.node.id && <Comments photoId={photo.node.id} key={photo.node.cursor} />}\r\n\r\n\t\t\t\t<AddComment ref={commentRef} photoId={photo.node.id} />\r\n\t\t\t</CardBody>\r\n\t\t\t{photo.node.likes.length > 0 && (\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<PhotoLikers photoId={photo.node.id} closeModal={closeModal} ids={photo.node.likes} />\r\n\t\t\t\t</CardBody>\r\n\t\t\t)}\r\n\t\t</Card>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport InfinitScroll from 'react-infinite-scroll-component';\r\n\r\nimport Photo from './components/Photo';\r\nimport { LinearProgress } from 'components';\r\n\r\nconst Photos = ({ loadMorePhotos, photos, hasNextPage, userIdForSharedPhotos }) => {\r\n\t// console.log('photos', photos);\r\n\treturn (\r\n\t\t<InfinitScroll\r\n\t\t\tnext={loadMorePhotos}\r\n\t\t\tdataLength={photos.length}\r\n\t\t\thasMore={hasNextPage}\r\n\t\t\tloader={<LinearProgress />}\r\n\t\t>\r\n\t\t\t{photos.map((photo) => (\r\n\t\t\t\t<Photo userIdForSharedPhotos={userIdForSharedPhotos} photo={photo} key={photo.node.id} />\r\n\t\t\t))}\r\n\t\t</InfinitScroll>\r\n\t);\r\n};\r\n\r\nexport default Photos;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Alert, LinearProgress } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { InputField } from 'components/material-fields';\r\nimport { useMutation, useQuery, useSubscription } from '@apollo/react-hooks';\r\nimport { ADD_A_PHOTO } from 'graphql/mutations/remote';\r\n\r\nimport { ADD_PHOTO_TO_LOCAL_STORE, SET_PHOTO_NOTIFICATIONS } from 'graphql/mutations/local';\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\nimport { PHOTO_ADDED } from 'graphql/subscriptions';\r\n\r\nexport default ({ closeModal }) => {\r\n\tconst [addPhoto, { loading }] = useMutation(ADD_A_PHOTO);\r\n\r\n\tconst [addPhotoToLocalStore] = useMutation(ADD_PHOTO_TO_LOCAL_STORE);\r\n\r\n\tconst [notifyUsers] = useMutation(SET_PHOTO_NOTIFICATIONS);\r\n\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tconst [file, setFile] = useState(null);\r\n\tconst [description, setDescription] = useState('');\r\n\r\n\tconst [category, setCategory] = useState('');\r\n\r\n\tuseSubscription(PHOTO_ADDED, {\r\n\t\tonSubscriptionData({\r\n\t\t\tclient: { cache },\r\n\t\t\tsubscriptionData: {\r\n\t\t\t\tdata: { photoAdded },\r\n\t\t\t},\r\n\t\t}) {\r\n\t\t\tif (photoAdded.owner.id === authUser.userId) return;\r\n\r\n\t\t\tnotifyUsers({ variables: { notification: photoAdded } });\r\n\t\t},\r\n\t});\r\n\r\n\tconst submitPhoto = () => {\r\n\t\tconst errors = validateForm({ file, description, category });\r\n\r\n\t\tif (Object.keys(errors).length > 0) {\r\n\t\t\tconst errorMsgs = [];\r\n\t\t\tfor (let key in errors) {\r\n\t\t\t\terrorMsgs.push(errors[key]);\r\n\t\t\t}\r\n\t\t\tAlert({ message: errorMsgs.join(','), color: 'red' });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taddPhoto({\r\n\t\t\tvariables: {\r\n\t\t\t\tphotoData: {\r\n\t\t\t\t\towner: authUser.userId,\r\n\t\t\t\t\tphoto: file,\r\n\t\t\t\t\tdescription,\r\n\t\t\t\t\ttaggedUsers: [],\r\n\t\t\t\t\tcategory,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetCategory('');\r\n\t\t\t\tsetFile(null);\r\n\t\t\t\tsetDescription('');\r\n\t\t\t\tcloseModal();\r\n\t\t\t\tAlert({ message: 'Successfully Added', color: 'green' });\r\n\r\n\t\t\t\taddPhotoToLocalStore({ variables: { photo: res.data.createPhoto, userId: authUser.userId } });\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('error sharing photo', e);\r\n\t\t\t});\r\n\r\n\t\t// console.log('submitting', { file, description, category, tags });\r\n\t};\r\n\tconst handleFileInput = (e) => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t};\r\n\r\n\tconst validateForm = (values) => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.file) {\r\n\t\t\terrors.file = 'You need to select a photo';\r\n\t\t} else if (!values.description) {\r\n\t\t\terrors.description = 'Please do write a description about your photo';\r\n\t\t} else if (!values.category) {\r\n\t\t\terrors.category = 'Select a category of your photo';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal title=\"Select\">\r\n\t\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t\t<Flat className=\"upload-btn\">\r\n\t\t\t\t\t\t<MaterialIcon children=\"add_a_photo\" />\r\n\t\t\t\t\t\t<input type=\"file\" onInput={handleFileInput} />\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" onInput={handleFileInput} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<InputField\r\n\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tlabel=\"A little description of your picture\"\r\n\t\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t\tvalue={description}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"input-field \">\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tvalue={category}\r\n\t\t\t\t\t\tonChange={(e) => setCategory(e.target.value)}\r\n\t\t\t\t\t\tid=\"category\"\r\n\t\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\t\tstyle={{ display: 'block', background: 'inherit' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"\">Select Category</option>\r\n\t\t\t\t\t\t<option value=\"ACTION\">Action</option>\r\n\t\t\t\t\t\t<option value=\"PETS\">Pets</option>\r\n\t\t\t\t\t\t<option value=\"FUN\">Fun</option>\r\n\t\t\t\t\t\t<option value=\"MOVIES\">Movies</option>\r\n\t\t\t\t\t\t<option value=\"TRAVEL\">Travel</option>\r\n\t\t\t\t\t\t<option value=\"OTHER\">Other</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"right-align\">\r\n\t\t\t\t\t<Flat disabled={loading} className=\"btn-auth\" onClick={submitPhoto}>\r\n\t\t\t\t\t\tShare\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t\t<Flat disabled={loading} className=\"btn-auth\" onClick={closeModal}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t\t{loading && <LinearProgress />}\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport { Card, CardBody, CardHeader, CardAction } from 'components/card';\r\nimport { Avatar } from 'components';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport './SharePicture.css';\r\n\r\nimport SelectPicture from './SelectPicture';\r\n\r\nexport default ({ me }) => {\r\n\t// console.log('me', me);\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card id=\"share-picture-card\">\r\n\t\t\t\t<CardHeader className=\"grey lighten-5\" id=\"share-picture-header\">\r\n\t\t\t\t\t<span>Share a picture</span>\r\n\t\t\t\t</CardHeader>\r\n\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<div className=\"avatar-container\">\r\n\t\t\t\t\t\t<Avatar src={me.profile ? me.profile.picture : '/img/cam1.jpeg'} />\r\n\t\t\t\t\t\t<span>Would you like to share a picture?</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</CardBody>\r\n\t\t\t\t<CardAction className=\"center\" id=\"share-picture-action\">\r\n\t\t\t\t\t<Flat className=\" btn-auth\" onClick={openModal}>\r\n\t\t\t\t\t\t<MaterialIcon children=\"add_a_photo\" style={{ fontSize: 30 }} />\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t</CardAction>\r\n\t\t\t\t<SelectPicture closeModal={closeModal} />\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\r\n\r\nimport { TIMELINE_DATA } from 'graphql/queries/remote';\r\n\r\nimport { LinearProgress, Alert } from 'components';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport SharePicture from './components/SharePicture';\r\nimport { Photos } from 'components';\r\n\r\nexport default () => {\r\n\tconst { data, loading, error, fetchMore } = useQuery(TIMELINE_DATA);\r\n\tconst client = useApolloClient();\r\n\r\n\tconst [photoList, setPhotoList] = React.useState([]);\r\n\r\n\t// if (data) {\r\n\t// \tconsole.log('timeline data', data);\r\n\t// }\r\n\r\n\tReact.useEffect(() => {\r\n\t\t//Observes the query TIMELINE_DATA for changes when a photo is  liked or unliked\r\n\t\tconst observable = client\r\n\t\t\t.watchQuery({\r\n\t\t\t\tquery: TIMELINE_DATA,\r\n\t\t\t})\r\n\t\t\t.subscribe(({ data: { photos } }) => {\r\n\t\t\t\tif (photoList.length !== photos.edges.length) {\r\n\t\t\t\t\tsetPhotoList(photos.edges);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn function cleanup() {\r\n\t\t\tobservable.unsubscribe();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{error && Alert({ message: error.message, color: 'red' })}\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t{data && data.me && (\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12} md={8} mdOffset={2} lg={6} lgOffset={3}>\r\n\t\t\t\t\t\t<SharePicture me={data.me} />\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t)}\r\n\t\t\t{data && data.photos && (\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={12} md={8} mdOffset={2} lg={6} lgOffset={3}>\r\n\t\t\t\t\t\t<Photos\r\n\t\t\t\t\t\t\tphotos={photoList}\r\n\t\t\t\t\t\t\thasNextPage={data.photos.pageInfo.hasNextPage || false}\r\n\t\t\t\t\t\t\tloadMorePhotos={() => {\r\n\t\t\t\t\t\t\t\tfetchMore({\r\n\t\t\t\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\t\t\t\tafter: data.photos.pageInfo.endCursor,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tupdateQuery: (previousResult, { fetchMoreResult }) => {\r\n\t\t\t\t\t\t\t\t\t\tconst newEdges = fetchMoreResult.photos.edges;\r\n\t\t\t\t\t\t\t\t\t\tconst pageInfo = fetchMoreResult.photos.pageInfo;\r\n\t\t\t\t\t\t\t\t\t\treturn newEdges.length\r\n\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tphotos: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__typename: previousResult.photos.__typename,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tedges: [...previousResult.photos.edges, ...newEdges],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpageInfo,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tme: previousResult.me,\r\n\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t\t: previousResult;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nconst ProfilePicture = ({ profile }) => {\r\n\treturn (\r\n\t\t<div className=\"profile\">\r\n\t\t\t<img src={profile ? profile.picture : '/img/cam1.jpeg'} alt=\"some profile\" id=\"cover\" />\r\n\t\t\t<img src={profile ? profile.picture : '/img/cam4.jpeg'} alt=\"some profile\" id=\"profile-avatar\" />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default ProfilePicture;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Alert, LinearProgress } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { InputField } from 'components/material-fields';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { ADD_USER_PROFILE } from 'graphql/mutations/remote';\r\n\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\n\r\nexport default ({ closeModal, updateProfile }) => {\r\n\tconst [addUserProfile, { loading }] = useMutation(ADD_USER_PROFILE);\r\n\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tconst [file, setFile] = useState(null);\r\n\tconst [description, setDescription] = useState('');\r\n\r\n\tconst submitProfile = () => {\r\n\t\tconst errors = validateForm({ file, description });\r\n\r\n\t\tif (Object.keys(errors).length > 0) {\r\n\t\t\tconst errorMsgs = [];\r\n\t\t\tfor (let key in errors) {\r\n\t\t\t\terrorMsgs.push(errors[key]);\r\n\t\t\t}\r\n\t\t\tAlert({ message: errorMsgs.join(','), color: 'red' });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// console.log('submitting', { owner: authUser.userId, picture: file, description });\r\n\r\n\t\taddUserProfile({\r\n\t\t\tvariables: {\r\n\t\t\t\tprofileData: {\r\n\t\t\t\t\towner: authUser.userId,\r\n\t\t\t\t\tpicture: file,\r\n\t\t\t\t\tabout: description,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tupdate(cache, { data: { createProfile } }) {\r\n\t\t\t\tsetFile(null);\r\n\t\t\t\tsetDescription('');\r\n\t\t\t\tcloseModal();\r\n\t\t\t\tAlert({ message: 'Successfully Added', color: 'green' });\r\n\t\t\t\tupdateProfile({ cache, createProfile });\r\n\t\t\t},\r\n\t\t}).catch((e) => {\r\n\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\tconsole.log('error adding user profile', e);\r\n\t\t});\r\n\t};\r\n\tconst handleFileInput = (e) => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t};\r\n\r\n\tconst validateForm = (values) => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.file) {\r\n\t\t\terrors.file = 'You need to select a photo';\r\n\t\t} else if (!values.description) {\r\n\t\t\terrors.description = 'Please do write a description about your photo';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal title=\"Select\" className=\"add-profile-modal\">\r\n\t\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t\t<Flat className=\"upload-btn\">\r\n\t\t\t\t\t\t<MaterialIcon children=\"add_a_photo\" />\r\n\t\t\t\t\t\t<input type=\"file\" onInput={handleFileInput} />\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"file-path validate\"\r\n\t\t\t\t\t\t\tplaceholder=\"Select Profile Picture\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tonInput={handleFileInput}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<InputField\r\n\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tlabel=\"A little description about yourself\"\r\n\t\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t\tvalue={description}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"right-align\">\r\n\t\t\t\t\t<Flat disabled={loading} className=\"btn-auth\" onClick={submitProfile}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t\t<Flat disabled={loading} className=\"btn-auth\" onClick={closeModal}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t\t{loading && <LinearProgress />}\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Alert, LinearProgress } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { EDIT_USER_PROFILE_PICTURE } from 'graphql/mutations/remote';\r\n\r\nimport { UPDATE_ME_PROFILE } from 'graphql/mutations/local';\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\n\r\nimport { Card } from 'components/card';\r\n\r\nexport default ({ profileId, showChangeProfilePic }) => {\r\n\tconst [editUserProfilePicture, { loading }] = useMutation(EDIT_USER_PROFILE_PICTURE);\r\n\tconst [updateMeProfile] = useMutation(UPDATE_ME_PROFILE);\r\n\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tconst [file, setFile] = useState(null);\r\n\r\n\tconst submitProfile = () => {\r\n\t\tconst errors = validateForm({ file });\r\n\r\n\t\tif (Object.keys(errors).length > 0) {\r\n\t\t\tconst errorMsgs = [];\r\n\t\t\tfor (let key in errors) {\r\n\t\t\t\terrorMsgs.push(errors[key]);\r\n\t\t\t}\r\n\t\t\tAlert({ message: errorMsgs.join(','), color: 'red' });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// console.log('submitting', { owner: authUser.userId, picture: file, description });\r\n\r\n\t\teditUserProfilePicture({\r\n\t\t\tvariables: {\r\n\t\t\t\tid: profileId,\r\n\t\t\t\tpicture: file,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetFile(null);\r\n\t\t\t\tshowChangeProfilePic(false);\r\n\t\t\t\tAlert({ message: 'Successfully Added', color: 'green' });\r\n\t\t\t\tconst {\r\n\t\t\t\t\tdata: { editProfilePicture },\r\n\t\t\t\t} = res;\r\n\t\t\t\t// console.log('new profile picture', editProfilePicture);\r\n\t\t\t\tupdateMeProfile({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tuserId: authUser.userId,\r\n\t\t\t\t\t\tprofile: editProfilePicture,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\t// console.log('response ', res);\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('error adding user profile', e);\r\n\t\t\t});\r\n\t};\r\n\tconst handleFileInput = (e) => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t};\r\n\r\n\tconst validateForm = (values) => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.file) {\r\n\t\t\terrors.file = 'You need to select a photo';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t<Flat className=\"upload-btn\">\r\n\t\t\t\t\t<MaterialIcon children=\"add_a_photo\" />\r\n\t\t\t\t\t<input type=\"file\" onInput={handleFileInput} />\r\n\t\t\t\t</Flat>\r\n\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"file-path validate\"\r\n\t\t\t\t\t\tplaceholder=\"Select Another Profile Picture\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonInput={handleFileInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"right-align\">\r\n\t\t\t\t<Flat disabled={loading} className=\"btn-auth\" onClick={submitProfile}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</Flat>\r\n\r\n\t\t\t\t{loading && <LinearProgress />}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Alert, LinearProgress } from 'components';\r\nimport { Flat } from 'components/buttons';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { EDIT_USER_PROFILE } from 'graphql/mutations/remote';\r\n\r\nimport { UPDATE_ME_PROFILE } from 'graphql/mutations/local';\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\n\r\nimport { Card, CardBody } from 'components/card';\r\n\r\nexport default ({ about, profileId, showEditProfile }) => {\r\n\tconst [editUserProfile, { loading }] = useMutation(EDIT_USER_PROFILE);\r\n\tconst [updateMeProfile] = useMutation(UPDATE_ME_PROFILE);\r\n\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\r\n\tconst [description, setDescription] = useState(about);\r\n\r\n\tconst submitProfile = () => {\r\n\t\tconst errors = validateForm({ description });\r\n\r\n\t\tif (Object.keys(errors).length > 0) {\r\n\t\t\tconst errorMsgs = [];\r\n\t\t\tfor (let key in errors) {\r\n\t\t\t\terrorMsgs.push(errors[key]);\r\n\t\t\t}\r\n\t\t\tAlert({ message: errorMsgs.join(','), color: 'red' });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// console.log('submitting', { owner: authUser.userId, picture: file, description });\r\n\r\n\t\teditUserProfile({\r\n\t\t\tvariables: {\r\n\t\t\t\tid: profileId,\r\n\t\t\t\tabout: description,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetDescription('');\r\n\t\t\t\tshowEditProfile(false);\r\n\t\t\t\tAlert({ message: 'Successfully Added', color: 'green' });\r\n\t\t\t\tconst {\r\n\t\t\t\t\tdata: { editProfile },\r\n\t\t\t\t} = res;\r\n\t\t\t\t// console.log('editProfile', editProfile);\r\n\t\t\t\tupdateMeProfile({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\tuserId: authUser.userId,\r\n\t\t\t\t\t\tprofile: editProfile,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\t// console.log('response ', res);\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('error adding user profile', e);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst validateForm = (values) => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.description) {\r\n\t\t\terrors.description = 'Please do write a description about your photo';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<div className=\"input-field \">\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tid=\"profile-description\"\r\n\t\t\t\t\t\t\tclassName=\"materialize-textarea\"\r\n\t\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t></textarea>\r\n\t\t\t\t\t\t<label htmlFor=\"profile-description\" className=\"active\">\r\n\t\t\t\t\t\t\tEdit about yourself\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"right-align\">\r\n\t\t\t\t\t\t<Flat disabled={loading} className=\"btn-auth\" onClick={submitProfile}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Flat>\r\n\r\n\t\t\t\t\t\t{loading && <LinearProgress />}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nconst AboutUser = ({ profile }) => {\r\n\treturn (\r\n\t\t<p style={{ marginBottom: 30 }}>\r\n\t\t\t{profile\r\n\t\t\t\t? profile.about\r\n\t\t\t\t: `Lorem ipsum dolor sit amet consectetur adipisicing elit. Ab voluptatum eum, rem\r\n\t\t\t\t\t\t\t\t\t\tneque incidunt omnis, delectus architecto vero suscipit ducimus esse velit ex\r\n\t\t\t\t\t\t\t\t\t\ttempore magni debitis aliquid odit at adipisci.`}\r\n\t\t</p>\r\n\t);\r\n};\r\n\r\nexport default AboutUser;\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport { USER_SHARED_PHOTOS } from 'graphql/queries/remote';\r\nimport { GET_AUTH_USER } from 'graphql/queries/local';\r\n\r\nimport { LinearProgress, Alert, Divider } from 'components';\r\nimport { Photos } from 'components';\r\nimport { Card, CardBody, CardHeader } from 'components/card';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Flat } from 'components/buttons';\r\n\r\nimport ProfilePicture from './components/ProfilePicture';\r\nimport AddProfileModal from './components/AddProfile';\r\nimport ChangeProfilePicture from './components/ChangeProfilePicture';\r\nimport EditProfile from './components/EditProfile';\r\nimport AboutUser from './components/AboutUser';\r\n\r\nimport './Profile.css';\r\n\r\nexport default ({ userId }) => {\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\tconst { data, loading, error, fetchMore } = useQuery(USER_SHARED_PHOTOS, {\r\n\t\tvariables: { id: userId || authUser.userId },\r\n\t});\r\n\tconst [showEditProfile, setShowEditProfile] = useState(false);\r\n\tconst [showChangeProfilePic, setShowChangeProfilePic] = useState(false);\r\n\r\n\t// console.log('authUser', authUser);\r\n\t// if (data) {\r\n\t// \tconsole.log('photos shared', data);\r\n\t// }\r\n\r\n\tconst modal = React.useRef(null);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst elems = document.querySelectorAll('.add-profile-modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\t});\r\n\tconst openModal = () => {\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\r\n\tconst updateProfile = ({ cache, createProfile }) => {\r\n\t\tconst { user, me } = cache.readQuery({\r\n\t\t\tquery: USER_SHARED_PHOTOS,\r\n\t\t\tvariables: { id: authUser.userId },\r\n\t\t});\r\n\t\tuser.profile = { ...createProfile };\r\n\t\tme.profile = { ...createProfile };\r\n\r\n\t\tcache.writeQuery({\r\n\t\t\tquery: USER_SHARED_PHOTOS,\r\n\t\t\tvariables: { id: authUser.userId },\r\n\t\t\tdata: { user, me },\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{error && Alert({ message: error.message, color: 'red' })}\r\n\t\t\t{loading && <LinearProgress />}\r\n\r\n\t\t\t{data && data.me && !userId && <ProfilePicture profile={data.me.profile} />}\r\n\t\t\t{data && data.user && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{userId && <ProfilePicture profile={data.user.profile} />}\r\n\t\t\t\t\t<GridRow>\r\n\t\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<CardHeader style={{ marginBottom: 30 }}>\r\n\t\t\t\t\t\t\t\t\t\t<span>{data.user.username}</span>\r\n\t\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t\t\t<CardHeader style={{ marginTop: 30 }}>\r\n\t\t\t\t\t\t\t\t\t\t<span>About</span>\r\n\t\t\t\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t\t\t\t{userId && <AboutUser profile={data.user.profile} />}\r\n\t\t\t\t\t\t\t\t\t{!userId && <AboutUser profile={data.me.profile} />}\r\n\t\t\t\t\t\t\t\t\t{!userId && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t{data.me.profile ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"right-align\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Flat\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setShowEditProfile((state) => !state)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-auth\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{showEditProfile ? 'Cancel' : 'Edit Profile'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Flat\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setShowChangeProfilePic((state) => !state)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-auth\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{showChangeProfilePic ? 'Cancel' : 'Change Picture'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"right-align\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Flat onClick={openModal} className=\"btn-auth \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Profile\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Flat>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{showEditProfile && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<EditProfile\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 30 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tabout={data.me.profile.about}\r\n\t\t\t\t\t\t\t\t\t\t\t\tprofileId={data.me.profile.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowEditProfile={setShowEditProfile}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{showChangeProfilePic && (\r\n\t\t\t\t\t\t\t\t\t\t<ChangeProfilePicture\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginTop: 30 }}\r\n\t\t\t\t\t\t\t\t\t\t\tprofileId={data.me.profile.id}\r\n\t\t\t\t\t\t\t\t\t\t\tshowChangeProfilePic={setShowChangeProfilePic}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t</GridRow>\r\n\t\t\t\t\t<div className=\"pink-text center-align shared-photos\">\r\n\t\t\t\t\t\t<span>{!userId ? 'Photos you shared' : `Photos shared by ${data.user.username}`}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<GridRow>\r\n\t\t\t\t\t\t<GridItem sm={12} md={8} mdOffset={2} lg={6} lgOffset={3}>\r\n\t\t\t\t\t\t\t<Photos\r\n\t\t\t\t\t\t\t\tuserIdForSharedPhotos={userId}\r\n\t\t\t\t\t\t\t\tphotos={data.user.sharedPhotos.edges || []}\r\n\t\t\t\t\t\t\t\thasNextPage={data.user.sharedPhotos.pageInfo.hasNextPage || false}\r\n\t\t\t\t\t\t\t\tloadMorePhotos={() => {\r\n\t\t\t\t\t\t\t\t\tfetchMore({\r\n\t\t\t\t\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\t\t\t\t\tafter: data.user.sharedPhotos.pageInfo.endCursor,\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tupdateQuery: (previousResult, { fetchMoreResult }) => {\r\n\t\t\t\t\t\t\t\t\t\t\tconst newEdges = fetchMoreResult.user.sharedPhotos.edges;\r\n\t\t\t\t\t\t\t\t\t\t\tconst pageInfo = fetchMoreResult.user.sharedPhotos.pageInfo;\r\n\t\t\t\t\t\t\t\t\t\t\treturn newEdges.length\r\n\t\t\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...previousResult.user,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsharedPhotos: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__typename: previousResult.user.sharedPhotos.__typename,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tedges: [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...previousResult.user.sharedPhotos.edges,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...newEdges,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpageInfo,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__typename: previousResult.user.__typename,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tme: previousResult.me,\r\n\t\t\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t\t\t: previousResult;\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t</GridRow>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<AddProfileModal closeModal={closeModal} updateProfile={updateProfile} />\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nimport { InputField } from 'components/material-fields';\r\nimport { Flat } from 'components/buttons';\r\nimport { Alert } from 'components';\r\nimport { GET_SIGNING_IN_OR_UP, GET_AUTH_USER } from 'graphql/queries/local';\r\n\r\nimport { SIGN_IN_WITH_CREDENTIALS } from 'graphql/mutations/remote';\r\nimport { SET_SIGNING_IN_OR_UP } from 'graphql/mutations/local';\r\n\r\nexport default ({ signUp }) => {\r\n\tconst {\r\n\t\tdata: { signingInOrUp },\r\n\t} = useQuery(GET_SIGNING_IN_OR_UP);\r\n\tconst history = useHistory();\r\n\r\n\tconst [formSignIn, { loading }] = useMutation(SIGN_IN_WITH_CREDENTIALS);\r\n\tconst [setLoading] = useMutation(SET_SIGNING_IN_OR_UP);\r\n\r\n\tconst [emailOrUsername, setEmailOrUsername] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading({\r\n\t\t\tvariables: { state: loading },\r\n\t\t});\r\n\t}, [loading]);\r\n\tconst signIn = () => {\r\n\t\tconst errors = validateForm({ emailOrUsername, password });\r\n\t\tif (Object.keys(errors).length > 0) {\r\n\t\t\tconst errorMsgs = [];\r\n\t\t\tfor (let key in errors) {\r\n\t\t\t\terrorMsgs.push(errors[key]);\r\n\t\t\t}\r\n\t\t\tAlert({ message: errorMsgs.join(','), color: 'red' });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tformSignIn({\r\n\t\t\tvariables: {\r\n\t\t\t\tsigninData: {\r\n\t\t\t\t\temailOrUsername: emailOrUsername.trim(),\r\n\t\t\t\t\tpassword: password.trim(),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tupdate(cache, { data: { formSignIn } }) {\r\n\t\t\t\tconst { authUser } = cache.readQuery({\r\n\t\t\t\t\tquery: GET_AUTH_USER,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcache.writeData({\r\n\t\t\t\t\tdata: { authUser: { ...authUser, ...formSignIn } },\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.setItem('auth_user', JSON.stringify(formSignIn));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\thistory.push('/');\r\n\t\t\t\t}, 0);\r\n\t\t\t},\r\n\t\t}).catch((e) => {\r\n\t\t\tif (e.graphQLErrors.length > 0) {\r\n\t\t\t\tAlert({ message: e.graphQLErrors[0].message, color: 'red' });\r\n\t\t\t} else Alert({ message: e.message, color: 'red' });\r\n\t\t});\r\n\t};\r\n\tconst validateForm = (values) => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.emailOrUsername) {\r\n\t\t\terrors.email = 'Your email/username is required';\r\n\t\t} else if (!values.password) {\r\n\t\t\terrors.password = 'Password is required';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<InputField\r\n\t\t\t\tvalue={emailOrUsername}\r\n\t\t\t\tonChange={(e) => setEmailOrUsername(e.target.value)}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tlabel=\"Email or Username\"\r\n\t\t\t\tid=\"username\"\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t/>\r\n\t\t\t<InputField\r\n\t\t\t\tvalue={password}\r\n\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tlabel=\"Password\"\r\n\t\t\t\tid=\"password\"\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t/>\r\n\t\t\t<div className=\"right-align\">\r\n\t\t\t\t<Flat disabled={signingInOrUp} className=\"btn-auth\" onClick={signIn}>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</Flat>\r\n\t\t\t\t<Flat disabled={signingInOrUp} onClick={signUp} className=\"btn-auth\">\r\n\t\t\t\t\tSign Up\r\n\t\t\t\t</Flat>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport React from 'react';\r\nimport { SIGN_IN_WITH_PROVIDER } from 'graphql/mutations/remote';\r\nimport { GET_SIGNING_IN_OR_UP, GET_AUTH_USER } from 'graphql/queries/local';\r\nimport { SET_SIGNING_IN_OR_UP } from 'graphql/mutations/local';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Alert } from 'components';\r\n\r\nexport const useProviderSignin = () => {\r\n\tconst [signIn, { loading }] = useMutation(SIGN_IN_WITH_PROVIDER);\r\n\tconst {\r\n\t\tdata: { signingInOrUp },\r\n\t} = useQuery(GET_SIGNING_IN_OR_UP);\r\n\tconst [setLoading] = useMutation(SET_SIGNING_IN_OR_UP);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetLoading({\r\n\t\t\tvariables: { state: loading },\r\n\t\t});\r\n\t}, [loading]);\r\n\r\n\tconst signInWithProvider = ({ codeToken, providerName }) => {\r\n\t\tsignIn({\r\n\t\t\tvariables: {\r\n\t\t\t\tsigninData: { codeToken, providerName },\r\n\t\t\t},\r\n\t\t\tupdate(cache, { data: { providerSignIn } }) {\r\n\t\t\t\tconst { authUser } = cache.readQuery({\r\n\t\t\t\t\tquery: GET_AUTH_USER,\r\n\t\t\t\t});\r\n\t\t\t\tcache.writeData({\r\n\t\t\t\t\tdata: { authUser: { ...authUser, ...providerSignIn } },\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.setItem('auth_user', JSON.stringify(providerSignIn));\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\thistory.push('/');\r\n\t\t\t\t}, 0);\r\n\t\t\t},\r\n\t\t}).catch((e) => {\r\n\t\t\tif (e.graphQLErrors.length > 0) {\r\n\t\t\t\tAlert({ message: e.graphQLErrors[0].message, color: 'red' });\r\n\t\t\t} else Alert({ message: e.message, color: 'red' });\r\n\t\t});\r\n\t};\r\n\treturn [signInWithProvider, { signingInOrUp }];\r\n};\r\n","import React from 'react';\r\nimport { FacebookLoginButton } from 'react-social-login-buttons';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport { useProviderSignin } from '../useProviderSignin';\r\n\r\nexport default () => {\r\n\tconst [signInWithProvider, { signingInOrUp }] = useProviderSignin();\r\n\r\n\tconst handleAuthorized = (response) => {\r\n\t\tconst { accessToken } = response;\r\n\t\tsignInWithProvider({ codeToken: accessToken, providerName: 'facebook' });\r\n\t\t// console.log('sign in success response', accessToken);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FacebookLogin\r\n\t\t\tstyle={{ fontFamily: 'cursive', marginBottom: 10 }}\r\n\t\t\tappId=\"146820543436674\"\r\n\t\t\tcallback={handleAuthorized}\r\n\t\t\trender={(renderProps) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<FacebookLoginButton\r\n\t\t\t\t\t\tdisabled={renderProps.isDisabled || signingInOrUp}\r\n\t\t\t\t\t\tonClick={renderProps.onClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign In with Facebook\r\n\t\t\t\t\t</FacebookLoginButton>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { GoogleLoginButton } from 'react-social-login-buttons';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useProviderSignin } from '../useProviderSignin';\r\n\r\nexport default () => {\r\n\tconst [signInWithProvider, { signingInOrUp }] = useProviderSignin();\r\n\r\n\tconst handleAuthorized = (response) => {\r\n\t\tconst { tokenId } = response;\r\n\t\tsignInWithProvider({ codeToken: tokenId, providerName: 'google' });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GoogleLogin\r\n\t\t\tstyle={{ fontFamily: 'cursive', marginBottom: 10 }}\r\n\t\t\tclientId=\"204663574116-rt4gef32f4vb9a3preg0a9b8mqdm41is.apps.googleusercontent.com\"\r\n\t\t\tonSuccess={handleAuthorized}\r\n\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\trender={(renderProps) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<GoogleLoginButton onClick={renderProps.onClick} disabled={renderProps.disabled || signingInOrUp}>\r\n\t\t\t\t\t\tSign In with Google\r\n\t\t\t\t\t</GoogleLoginButton>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t></GoogleLogin>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { GithubLoginButton } from 'react-social-login-buttons';\r\nimport { useProviderSignin } from '../useProviderSignin';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { GET_GITHUB_CODE } from 'graphql/queries/local';\r\nimport { SET_GITHUB_CODE } from 'graphql/mutations/local';\r\n\r\nconst clientID = 'a6839e36b9ca33f9324c';\r\n\r\nexport default () => {\r\n\tconst [signInWithProvider, { signingInOrUp }] = useProviderSignin();\r\n\tconst {\r\n\t\tdata: { githubCode },\r\n\t} = useQuery(GET_GITHUB_CODE);\r\n\tconst [setGithubCode] = useMutation(SET_GITHUB_CODE);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (githubCode) {\r\n\t\t\tsignInWithProvider({ codeToken: githubCode, providerName: 'github' });\r\n\t\t\tsetGithubCode({ variables: { value: '' } });\r\n\t\t}\r\n\t}, [githubCode]);\r\n\r\n\tconst handleClick = () => {\r\n\t\twindow.location = `https://github.com/login/oauth/authorize?client_id=${clientID}&scope=user`;\r\n\t};\r\n\treturn (\r\n\t\t<GithubLoginButton\r\n\t\t\tdisabled={signingInOrUp}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tstyle={{ fontFamily: 'cursive', marginBottom: 10 }}\r\n\t\t>\r\n\t\t\tSign In with Github\r\n\t\t</GithubLoginButton>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\n\r\nimport { SET_SIGNING_IN_OR_UP } from 'graphql/mutations/local';\r\nimport { GET_SIGNING_IN_OR_UP } from 'graphql/queries/local';\r\n\r\nimport { InputField } from 'components/material-fields';\r\nimport { CardHeader, CardBody } from 'components/card';\r\nimport { Flat } from 'components/buttons';\r\nimport { SIGN_UP_USING_FORM } from 'graphql/mutations/remote';\r\nimport Alert from 'components/alert/Alert';\r\n\r\nexport default ({ signIn }) => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [confirmPass, setConfirmPass] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst [setLoading] = useMutation(SET_SIGNING_IN_OR_UP);\r\n\tconst [formSignUp, { loading }] = useMutation(SIGN_UP_USING_FORM);\r\n\r\n\tconst {\r\n\t\tdata: { signingInOrUp },\r\n\t} = useQuery(GET_SIGNING_IN_OR_UP);\r\n\r\n\tconst signUp = () => {\r\n\t\tconst errors = validateForm({ email, username, confirmPass, password });\r\n\r\n\t\tif (Object.keys(errors).length > 0) {\r\n\t\t\tconst errorMsgs = [];\r\n\t\t\tfor (let key in errors) {\r\n\t\t\t\terrorMsgs.push(errors[key]);\r\n\t\t\t}\r\n\t\t\tAlert({ message: errorMsgs.join(','), color: 'red' });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetLoading({\r\n\t\t\tvariables: { state: loading },\r\n\t\t});\r\n\t\tformSignUp({\r\n\t\t\tvariables: {\r\n\t\t\t\tsignupData: {\r\n\t\t\t\t\tusername: username.trim(),\r\n\t\t\t\t\temail: email.trim(),\r\n\t\t\t\t\tpassword: password.trim(),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tAlert({ message: 'You can now sign in', color: 'green' });\r\n\t\t\t\tsetLoading({\r\n\t\t\t\t\tvariables: { state: false },\r\n\t\t\t\t});\r\n\t\t\t\tsignIn();\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tAlert({ message: e.message, color: 'red' });\r\n\t\t\t\tconsole.log('error signing up', e);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst validateForm = (values) => {\r\n\t\tconst errors = {};\r\n\t\tif (!values.email) {\r\n\t\t\terrors.email = 'Your email is required';\r\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\terrors.email = 'Your email is invalid';\r\n\t\t} else if (!values.username) {\r\n\t\t\terrors.username = 'Your username is required';\r\n\t\t} else if (!values.password) {\r\n\t\t\terrors.password = 'Password is required';\r\n\t\t} else if (values.password.length < 8) {\r\n\t\t\terrors.password = 'Password length must be greater than 7';\r\n\t\t} else if (!values.confirmPass) {\r\n\t\t\terrors.confirmPass = 'Re-enter password to confirm';\r\n\t\t} else if (values.confirmPass !== values.password) {\r\n\t\t\terrors.confirmPass = 'Password and confirm password fields must be the same';\r\n\t\t}\r\n\t\treturn errors;\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<CardHeader className=\"pink-text center-align\" style={{ marginBottom: 20 }}>\r\n\t\t\t\t\t<span style={{ fontWeight: 600 }}>Sign Up</span>\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<InputField\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tlabel=\"Email \"\r\n\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t\t/>\r\n\t\t\t\t<InputField\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t\t/>\r\n\t\t\t\t<InputField\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t\t/>\r\n\t\t\t\t<InputField\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\tid=\"confirmPass\"\r\n\t\t\t\t\tname=\"confirmPass\"\r\n\t\t\t\t\tlabelClassName=\"noactive\"\r\n\t\t\t\t\tvalue={confirmPass}\r\n\t\t\t\t\tonChange={(e) => setConfirmPass(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"right-align\">\r\n\t\t\t\t\t<Flat disabled={signingInOrUp} className=\"btn-auth\" onClick={signUp}>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t\t<Flat disabled={signingInOrUp} onClick={signIn} className=\"btn-auth\">\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Flat>\r\n\t\t\t\t</div>\r\n\t\t\t</CardBody>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport Credentials from './credentials/Credentials';\r\nimport Facebook from './facebook/Facebook';\r\nimport Google from './google/Google';\r\nimport Github from './github/Github';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Card, CardBody, CardHeader } from 'components/card';\r\n\r\nimport SignUp from 'components/register/Register';\r\n\r\nconst styles = {\r\n\tloginContainer: {\r\n\t\theight: '100vh',\r\n\t\tmargin: 0,\r\n\r\n\t\tdisplay: 'flex',\r\n\r\n\t\talignItems: 'center',\r\n\t},\r\n};\r\nconst SignIn = ({ signUp }) => {\r\n\treturn (\r\n\t\t<CardBody>\r\n\t\t\t<CardHeader className=\"pink-text center-align\" style={{ marginBottom: 20 }}>\r\n\t\t\t\t<span style={{ fontWeight: 600 }}>Sign In</span>\r\n\t\t\t</CardHeader>\r\n\r\n\t\t\t<Github />\r\n\t\t\t<Google />\r\n\t\t\t<Facebook />\r\n\t\t\t<CardHeader className=\"pink-text center-align\" style={{ marginTop: 20 }}>\r\n\t\t\t\t<span style={{ fontWeight: 600 }}>OR</span>\r\n\t\t\t</CardHeader>\r\n\t\t\t<Credentials signUp={signUp} />\r\n\t\t</CardBody>\r\n\t);\r\n};\r\nexport default () => {\r\n\tconst [showSignUp, setShowSignUp] = React.useState(false);\r\n\treturn (\r\n\t\t<GridRow style={styles.loginContainer} className=\"login-container\">\r\n\t\t\t<GridItem sm={12} md={7} mdOffset={2} lg={4} lgOffset={4}>\r\n\t\t\t\t<Card className=\"grey lighten-4 \">\r\n\t\t\t\t\t{!showSignUp && <SignIn signUp={() => setShowSignUp(true)} />}\r\n\t\t\t\t\t{showSignUp && <SignUp signIn={() => setShowSignUp(false)} />}\r\n\t\t\t\t</Card>\r\n\t\t\t</GridItem>\r\n\t\t</GridRow>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Login from 'components/login/Login';\r\nimport { GET_SIGNING_IN_OR_UP } from 'graphql/queries/local';\r\nimport { LinearProgress } from 'components';\r\n\r\nexport default () => {\r\n\tconst {\r\n\t\tdata: { signingInOrUp },\r\n\t} = useQuery(GET_SIGNING_IN_OR_UP);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{signingInOrUp && <LinearProgress />}\r\n\t\t\t<Login />\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Profile from 'views/profile/Profile';\r\n\r\nconst UserProfile = () => {\r\n\tconst location = useLocation();\r\n\r\n\treturn <Profile userId={location.state.id} />;\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport { GridRow, GridItem } from 'components/grid';\r\nimport { Photos, LinearProgress, Container } from 'components';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { SEARCH_PHOTOS } from 'graphql/queries/remote';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst SearchedPhotoList = () => {\r\n\tconst location = useLocation();\r\n\r\n\tconst { data, loading, fetchMore } = useQuery(SEARCH_PHOTOS, {\r\n\t\tvariables: { searchText: location.state ? location.state.searchText : '' },\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4 className=\"center pink-text\">Search Results</h4>\r\n\t\t\t{loading && <LinearProgress />}\r\n\t\t\t{data && data.searchPhotos.edges.length === 0 && (\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<h5 style={{ marginTop: 60 }}>No results found</h5>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t\t<GridRow>\r\n\t\t\t\t<GridItem sm={12} md={8} mdOffset={2} lg={6} lgOffset={3}>\r\n\t\t\t\t\t<Photos\r\n\t\t\t\t\t\tphotos={(data && data.searchPhotos.edges) || []}\r\n\t\t\t\t\t\thasNextPage={(data && data.searchPhotos.pageInfo.hasNextPage) || false}\r\n\t\t\t\t\t\tloadMorePhotos={() => {\r\n\t\t\t\t\t\t\tfetchMore({\r\n\t\t\t\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\t\t\tafter: data && data.searchPhotos.pageInfo.endCursor,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tupdateQuery: (previousResult, { fetchMoreResult }) => {\r\n\t\t\t\t\t\t\t\t\tconst newEdges = fetchMoreResult.searchPhotos.edges;\r\n\t\t\t\t\t\t\t\t\tconst pageInfo = fetchMoreResult.searchPhotos.pageInfo;\r\n\t\t\t\t\t\t\t\t\treturn newEdges.length\r\n\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsearchPhotos: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t__typename: previousResult.searchPhotos.__typename,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tedges: [...previousResult.searchPhotos.edges, ...newEdges],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpageInfo,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t: previousResult;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</GridRow>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchedPhotoList;\r\n","import React, { useRef } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\r\n// import { SET_AUTH_USER } from 'graphql/mutations/local';\r\nimport { MaterialIcon } from 'components/icons';\r\nimport { GET_PHOTO_NOTIFICATIONS } from 'graphql/queries/local';\r\n\r\nexport default ({ openModal }) => {\r\n\t// const [removeAuthUser] = useMutation(SET_AUTH_USER);\r\n\tconst client = useApolloClient();\r\n\r\n\tconst timelinePhotos = useRef('');\r\n\tconst {\r\n\t\tdata: { notifications },\r\n\t} = useQuery(GET_PHOTO_NOTIFICATIONS);\r\n\tconst history = useHistory();\r\n\r\n\tconst handleNotificationClick = () => {\r\n\t\tif (notifications.length === 0) return;\r\n\t\topenModal();\r\n\t};\r\n\r\n\tconst handleSearch = (e) => {\r\n\t\ttimelinePhotos.current = e.target.value;\r\n\t\thistory.push('/search-results', { searchText: e.target.value });\r\n\t};\r\n\tconst signOut = () => {\r\n\t\tlocalStorage.removeItem('auth_user');\r\n\t\tclient.resetStore();\r\n\t\treturn history.replace('/signin', { logout: true });\r\n\r\n\t\t// removeAuthUser({\r\n\t\t// \tvariables: {\r\n\t\t// \t\tuser: {\r\n\t\t// \t\t\tuserId: '',\r\n\t\t// \t\t\ttoken: '',\r\n\t\t// \t\t\t__typename: 'AuthResponse',\r\n\t\t// \t\t},\r\n\t\t// \t},\r\n\t\t// })\r\n\t\t// \t.then((res) => {\r\n\t\t// \t\tclient.resetStore();\r\n\t\t// \t\thistory.replace('/signin', { logout: true });\r\n\t\t// \t})\r\n\t\t// \t.catch((e) => {});\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"navbar-fixed\">\r\n\t\t\t<nav className=\"nav-wrapper pink\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li className=\"left search\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tonChange={handleSearch}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"searchTerm\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Search Photos\"\r\n\t\t\t\t\t\t\t\tid=\"search\"\r\n\t\t\t\t\t\t\t\tvalue={timelinePhotos.current}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"right sign-out\" id=\"notifications\" onClick={handleNotificationClick}>\r\n\t\t\t\t\t\t\t<MaterialIcon children=\"notifications\" />\r\n\t\t\t\t\t\t\t<span id=\"notifications-value\">{notifications.length}</span>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"right sign-out\" onClick={signOut}>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-sign-out-alt\"></i>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"right\">\r\n\t\t\t\t\t\t\t<NavLink to=\"/profile\">\r\n\t\t\t\t\t\t\t\t<i className=\"fas fa-user-circle\"></i>\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"right home\">\r\n\t\t\t\t\t\t\t<NavLink to=\"/\">\r\n\t\t\t\t\t\t\t\t<MaterialIcon children=\"home\" />\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport { Container } from 'components';\r\nimport { GridRow, GridItem } from 'components/grid';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className=\"page-footer pink darken-1 white-text\">\r\n\t\t\t<Container>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<GridItem sm={4} smOffset={2} md={3} mdOffset={3}>\r\n\t\t\t\t\t\t<h5>About</h5>\r\n\t\t\t\t\t\t<ul className=\"white-text\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tBlog\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t<GridItem sm={4} smOffset={2} md={3} mdOffset={3}>\r\n\t\t\t\t\t\t<h5>Contact</h5>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tTwitter\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tFacebook\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a className=\"white-text\" href=\"#!\">\r\n\t\t\t\t\t\t\t\t\tGithub\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\r\n\t\t\t\t<GridRow style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t<GridItem sm={12}>\r\n\t\t\t\t\t\t<div className=\"footer-copyright center-align\">\r\n\t\t\t\t\t\t\t<Container>© {new Date().getFullYear()} instaphotos.com</Container>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</GridItem>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</Container>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\n\r\nexport default ({ children, openModal }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar openModal={openModal} />\r\n\t\t\t{children}\r\n\t\t\t<Footer />\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { CollectionItem } from 'components/collections';\r\nimport { Avatar } from 'components';\r\n\r\nconst styles = {\r\n\tuser: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tcursor: 'pointer',\r\n\t\tmarginTop: 10,\r\n\t},\r\n};\r\n\r\nconst Notification = ({ notification, handleNotificationClicked }) => {\r\n\treturn (\r\n\t\t<CollectionItem onClick={() => handleNotificationClicked(notification)}>\r\n\t\t\t<div style={styles.user}>\r\n\t\t\t\t<Avatar src={notification.owner.profile ? notification.owner.profile.picture : '/img/cam1.jpeg'} />\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>{notification.description ? notification.description : 'Blablablablaalbbla'}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</CollectionItem>\r\n\t);\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nimport { ADD_PHOTO_TO_LOCAL_STORE, REMOVE_PHOTO_FROM_LOCAL_STORE } from 'graphql/mutations/local';\r\nimport Notification from './components/Notification';\r\nimport { Modal } from 'components';\r\nimport { Collection } from 'components/collections';\r\n\r\nconst NotificationList = ({ notifications, closeModal }) => {\r\n\tconst [addPhotoToLocalStore] = useMutation(ADD_PHOTO_TO_LOCAL_STORE);\r\n\tconst [removePhotoFromLocalStore] = useMutation(REMOVE_PHOTO_FROM_LOCAL_STORE);\r\n\r\n\tconst handleNotificationClick = (photo) => {\r\n\t\tcloseModal();\r\n\t\taddPhotoToLocalStore({ variables: { photo } });\r\n\t\tremovePhotoFromLocalStore({ variables: { photo } });\r\n\t};\r\n\tconst notificationItems = notifications.map((notification) => (\r\n\t\t<Notification\r\n\t\t\thandleNotificationClicked={handleNotificationClick}\r\n\t\t\tkey={notification.id}\r\n\t\t\tnotification={notification}\r\n\t\t/>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<Modal className=\"notifications-modal\" title=\"Photos just shared by users, click to see\">\r\n\t\t\t<Collection>{notificationItems}</Collection>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default NotificationList;\r\n","import React from 'react';\r\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport 'materialize-css';\r\n\r\nimport './assets/app.scss';\r\nimport './App.css';\r\n\r\nimport { GET_AUTH_USER, GET_PHOTO_NOTIFICATIONS } from 'graphql/queries/local';\r\nimport { Timeline, Profile, Authentication, UserProfile, SearchPhotoList } from 'views';\r\n\r\nimport GeneralLayout from 'layout/GeneralLayout';\r\nimport NotificationList from 'views/notifications/NotificationList';\r\nimport { SET_GITHUB_CODE } from 'graphql/mutations/local';\r\n\r\nfunction App() {\r\n\tconst client = useApolloClient();\r\n\tconst {\r\n\t\tdata: { authUser },\r\n\t} = useQuery(GET_AUTH_USER);\r\n\tconst {\r\n\t\tdata: { notifications },\r\n\t} = useQuery(GET_PHOTO_NOTIFICATIONS);\r\n\r\n\tconst setCode = (code) => {\r\n\t\tclient\r\n\t\t\t.mutate({\r\n\t\t\t\tmutation: SET_GITHUB_CODE,\r\n\t\t\t\tvariables: { value: code },\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log('error', e);\r\n\t\t\t});\r\n\t};\r\n\tconst modal = React.useRef(null);\r\n\r\n\tconst openModal = () => {\r\n\t\tconst elems = document.querySelectorAll('.notifications-modal');\r\n\t\t// eslint-disable-next-line\r\n\t\tconst instances = M.Modal.init(elems);\r\n\t\tmodal.current = instances[0];\r\n\r\n\t\tmodal.current.open();\r\n\t};\r\n\tconst closeModal = () => {\r\n\t\tmodal.current.close();\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\trender={({ history }) => {\r\n\t\t\t\t\t\t\tif (authUser.token) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<GeneralLayout openModal={openModal}>\r\n\t\t\t\t\t\t\t\t\t\t<Timeline />\r\n\t\t\t\t\t\t\t\t\t</GeneralLayout>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn <Redirect to=\"/signin\" />;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/signin\"\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\trender={({ history }) => {\r\n\t\t\t\t\t\t\tif (history.location.state && history.location.state.logout) {\r\n\t\t\t\t\t\t\t\thistory.location.state.logout = false;\r\n\t\t\t\t\t\t\t\treturn <Authentication />;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (history.location.search.match(/code=/)) {\r\n\t\t\t\t\t\t\t\tconst code = history.location.search.replace('?code=', '');\r\n\t\t\t\t\t\t\t\tsetCode(code);\r\n\t\t\t\t\t\t\t\thistory.replace('/signin');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (authUser.token) {\r\n\t\t\t\t\t\t\t\treturn <Redirect to=\"/\" />;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn <Authentication />;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/profile\"\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\trender={() => {\r\n\t\t\t\t\t\t\tif (authUser.token) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<GeneralLayout openModal={openModal}>\r\n\t\t\t\t\t\t\t\t\t\t<Profile />\r\n\t\t\t\t\t\t\t\t\t</GeneralLayout>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn <Redirect to=\"/signin\" />;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/profile/:id\"\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\trender={() => {\r\n\t\t\t\t\t\t\tif (authUser.token) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<GeneralLayout openModal={openModal}>\r\n\t\t\t\t\t\t\t\t\t\t<UserProfile />\r\n\t\t\t\t\t\t\t\t\t</GeneralLayout>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn <Redirect to=\"/signin\" />;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/search-results\"\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\trender={() => {\r\n\t\t\t\t\t\t\tif (authUser.token) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<GeneralLayout openModal={openModal}>\r\n\t\t\t\t\t\t\t\t\t\t<SearchPhotoList />\r\n\t\t\t\t\t\t\t\t\t</GeneralLayout>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn <Redirect to=\"/signin\" />;\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Redirect to=\"/signin\" />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t\t<NotificationList notifications={notifications} closeModal={closeModal} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { createClient } from 'graphql/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t// <React.StrictMode>\n\t<ApolloProvider client={createClient()}>\n\t\t<App />\n\t</ApolloProvider>,\n\t// </React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}